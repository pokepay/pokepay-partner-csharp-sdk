// DO NOT EDIT: File is generated by code generator.
using System;
using System.Net;
using System.Net.Http;
using NUnit.Framework;
using System.Threading.Tasks;
using System.Collections.Generic;

using PokepayPartnerCsharpSdk;

namespace PokepayPartnerCsharpSdk.Test
{
    public class TestGetPrivateMoneySummary
    {
        private Client client;

        [OneTimeSetUp]
        public void OneTimeSetup()
        {
            client = new Client("~/.pokepay/test-config.ini");
        }

        [Test]
        public async Task GetPrivateMoneySummary0()
        {
            try {
                Request.GetPrivateMoneySummary request = new Request.GetPrivateMoneySummary(
                    "1caca30a-4c6e-4e6b-9d85-1d5b9a7b565d"
                );
                Response.PrivateMoneySummary response = await request.Send(client);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.Data["StatusCode"], (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.Data["StatusCode"] >= 300, "Should be larger than 300");
            }
        }

        [Test]
        public async Task GetPrivateMoneySummary1()
        {
            try {
                Request.GetPrivateMoneySummary request = new Request.GetPrivateMoneySummary(
                    "1caca30a-4c6e-4e6b-9d85-1d5b9a7b565d"
                ) {
                    To = "2023-11-02T15:24:19.000000+09:00",
                };
                Response.PrivateMoneySummary response = await request.Send(client);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.Data["StatusCode"], (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.Data["StatusCode"] >= 300, "Should be larger than 300");
            }
        }

        [Test]
        public async Task GetPrivateMoneySummary2()
        {
            try {
                Request.GetPrivateMoneySummary request = new Request.GetPrivateMoneySummary(
                    "1caca30a-4c6e-4e6b-9d85-1d5b9a7b565d"
                ) {
                    From = "2024-07-26T16:31:37.000000+09:00",
                    To = "2020-08-31T22:52:18.000000+09:00",
                };
                Response.PrivateMoneySummary response = await request.Send(client);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.Data["StatusCode"], (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.Data["StatusCode"] >= 300, "Should be larger than 300");
            }
        }

    }
}
