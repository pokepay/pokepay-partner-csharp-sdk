// DO NOT EDIT: File is generated by code generator.
using System;
using System.Net;
using System.Net.Http;
using NUnit.Framework;
using System.Threading.Tasks;
using System.Collections.Generic;

using PokepayPartnerCsharpSdk;

namespace PokepayPartnerCsharpSdk.Test
{
    public class TestGetPrivateMoneySummary
    {
        private Client client;

        [OneTimeSetUp]
        public void OneTimeSetup()
        {
            client = new Client("~/.pokepay/test-config.ini");
        }

        [Test]
        public async Task GetPrivateMoneySummary0()
        {
            try {
                Request.GetPrivateMoneySummary request = new Request.GetPrivateMoneySummary(
                    "f3db3178-c932-44fa-939a-ee7eab246f13"
                );
                Response.PrivateMoneySummary response = await request.Send(client);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.Data["StatusCode"], (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.Data["StatusCode"] >= 300, "Should be larger than 300");
            }
        }

        [Test]
        public async Task GetPrivateMoneySummary1()
        {
            try {
                Request.GetPrivateMoneySummary request = new Request.GetPrivateMoneySummary(
                    "f3db3178-c932-44fa-939a-ee7eab246f13"
                ) {
                    To = "2023-03-31T23:23:39.000000Z",
                };
                Response.PrivateMoneySummary response = await request.Send(client);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.Data["StatusCode"], (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.Data["StatusCode"] >= 300, "Should be larger than 300");
            }
        }

        [Test]
        public async Task GetPrivateMoneySummary2()
        {
            try {
                Request.GetPrivateMoneySummary request = new Request.GetPrivateMoneySummary(
                    "f3db3178-c932-44fa-939a-ee7eab246f13"
                ) {
                    From = "2020-05-17T23:35:35.000000Z",
                    To = "2021-05-12T16:59:00.000000Z",
                };
                Response.PrivateMoneySummary response = await request.Send(client);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.Data["StatusCode"], (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.Data["StatusCode"] >= 300, "Should be larger than 300");
            }
        }

    }
}
