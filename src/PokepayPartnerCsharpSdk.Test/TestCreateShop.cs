// DO NOT EDIT: File is generated by code generator.
using System;
using System.Net;
using System.Net.Http;
using NUnit.Framework;
using System.Threading.Tasks;
using System.Collections.Generic;

using PokepayPartnerCsharpSdk;

namespace PokepayPartnerCsharpSdk.Test
{
    public class TestCreateShop
    {
        private Client client;

        [OneTimeSetUp]
        public void OneTimeSetup()
        {
            client = new Client("~/.pokepay/test-config.ini");
        }

        [Test]
        public async Task CreateShop0()
        {
            try {
                Request.CreateShop request = new Request.CreateShop(
                    "i5T0Y9RWH6gn8dr450YCYTSLMHPnkKzj18BmC8SoL8QQIleTvFwLlVpV5kzwsRuN0xnGbGf"
                );
                Response.User response = await request.Send(client);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.Data["StatusCode"], (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.Data["StatusCode"] >= 300, "Should be larger than 300");
            }
        }

        [Test]
        public async Task CreateShop1()
        {
            try {
                Request.CreateShop request = new Request.CreateShop(
                    "i5T0Y9RWH6gn8dr450YCYTSLMHPnkKzj18BmC8SoL8QQIleTvFwLlVpV5kzwsRuN0xnGbGf"
                ) {
                    OrganizationCode = "1W919--nu0lBE82Y4I-Zw1os",
                };
                Response.User response = await request.Send(client);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.Data["StatusCode"], (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.Data["StatusCode"] >= 300, "Should be larger than 300");
            }
        }

        [Test]
        public async Task CreateShop2()
        {
            try {
                Request.CreateShop request = new Request.CreateShop(
                    "i5T0Y9RWH6gn8dr450YCYTSLMHPnkKzj18BmC8SoL8QQIleTvFwLlVpV5kzwsRuN0xnGbGf"
                ) {
                    ShopExternalId = "V4Sa5s0OLVUmbuBlhEUAMHun3JkZ",
                    OrganizationCode = "-j-F9TbJWs7I3EQ5-9--acz5WM",
                };
                Response.User response = await request.Send(client);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.Data["StatusCode"], (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.Data["StatusCode"] >= 300, "Should be larger than 300");
            }
        }

        [Test]
        public async Task CreateShop3()
        {
            try {
                Request.CreateShop request = new Request.CreateShop(
                    "i5T0Y9RWH6gn8dr450YCYTSLMHPnkKzj18BmC8SoL8QQIleTvFwLlVpV5kzwsRuN0xnGbGf"
                ) {
                    ShopEmail = "SCh35qTV4P@4eGh.com",
                    ShopExternalId = "x3oHdOEN270lED7DlSxnJ",
                    OrganizationCode = "0Oa2i2-x1sX",
                };
                Response.User response = await request.Send(client);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.Data["StatusCode"], (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.Data["StatusCode"] >= 300, "Should be larger than 300");
            }
        }

        [Test]
        public async Task CreateShop4()
        {
            try {
                Request.CreateShop request = new Request.CreateShop(
                    "i5T0Y9RWH6gn8dr450YCYTSLMHPnkKzj18BmC8SoL8QQIleTvFwLlVpV5kzwsRuN0xnGbGf"
                ) {
                    ShopTel = "073288867",
                    ShopEmail = "qkGt7kAr1X@9cwf.com",
                    ShopExternalId = "vbwkgPhsolgx",
                    OrganizationCode = "",
                };
                Response.User response = await request.Send(client);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.Data["StatusCode"], (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.Data["StatusCode"] >= 300, "Should be larger than 300");
            }
        }

        [Test]
        public async Task CreateShop5()
        {
            try {
                Request.CreateShop request = new Request.CreateShop(
                    "i5T0Y9RWH6gn8dr450YCYTSLMHPnkKzj18BmC8SoL8QQIleTvFwLlVpV5kzwsRuN0xnGbGf"
                ) {
                    ShopAddress = "qKeU9tkQ3SIA4HCH4yEqBWJMFucufIbXemEsI1F2JZBUUavBrwmjIE3ftYbC0ZOSHZJBo",
                    ShopTel = "00684034",
                    ShopEmail = "t9sh8ysXd7@nl8X.com",
                    ShopExternalId = "62ayLHIJhK497jmS22AwebCwsGCK8H2Hwb",
                    OrganizationCode = "G2",
                };
                Response.User response = await request.Send(client);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.Data["StatusCode"], (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.Data["StatusCode"] >= 300, "Should be larger than 300");
            }
        }

        [Test]
        public async Task CreateShop6()
        {
            try {
                Request.CreateShop request = new Request.CreateShop(
                    "i5T0Y9RWH6gn8dr450YCYTSLMHPnkKzj18BmC8SoL8QQIleTvFwLlVpV5kzwsRuN0xnGbGf"
                ) {
                    ShopPostalCode = "4115297",
                    ShopAddress = "PlNlib0BOFjSjAFKP9eOjTYOyguKaqOPKsvVvQNhmfZAV39vSjbKlAZQb1a7gKUWNrDxl90zvMAzItoQmGoA",
                    ShopTel = "05-115473",
                    ShopEmail = "4GigQmIaEX@BGKL.com",
                    ShopExternalId = "lxrL7ebng9jxLDMY4es4Fu93QiF6x",
                    OrganizationCode = "Y-xvH35C4m-4-4--x65-9-7tWTBd-1i9",
                };
                Response.User response = await request.Send(client);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.Data["StatusCode"], (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.Data["StatusCode"] >= 300, "Should be larger than 300");
            }
        }

    }
}
