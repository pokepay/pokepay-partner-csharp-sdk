// DO NOT EDIT: File is generated by code generator.
using System;
using System.Net;
using System.Net.Http;
using NUnit.Framework;
using System.Threading.Tasks;
using System.Collections.Generic;

using PokepayPartnerCsharpSdk;

namespace PokepayPartnerCsharpSdk.Test
{
    public class TestCreateBill
    {
        private Client client;

        [OneTimeSetUp]
        public void OneTimeSetup()
        {
            client = new Client("~/.pokepay/test-config.ini");
        }

        [Test]
        public async Task CreateBill0()
        {
            try {
                Request.CreateBill request = new Request.CreateBill(
                    "bc4c0848-972a-46c6-a393-72f15ba17fff",
                    "72277396-9227-4804-aaf0-abdb4cc94ae3"
                );
                Response.Bill response = await request.Send(client);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.Data["StatusCode"], (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.Data["StatusCode"] >= 300, "Should be larger than 300");
            }
        }

        [Test]
        public async Task CreateBill1()
        {
            try {
                Request.CreateBill request = new Request.CreateBill(
                    "bc4c0848-972a-46c6-a393-72f15ba17fff",
                    "72277396-9227-4804-aaf0-abdb4cc94ae3"
                ) {
                    Description = "7gk6uknPKMAkslz2e4fQKMOKMWNVv7floPIfhqzMXimazWbHRVX4JiF0VeOTTKiET7JiYcG3uS1LX0LOcyxVI9CRrtDtZ4edXGpSU78v5ffOUUQ7woLAOPXZByY8nQ3DlbXvy9OSXfGQ4Qave4",
                };
                Response.Bill response = await request.Send(client);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.Data["StatusCode"], (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.Data["StatusCode"] >= 300, "Should be larger than 300");
            }
        }

        [Test]
        public async Task CreateBill2()
        {
            try {
                Request.CreateBill request = new Request.CreateBill(
                    "bc4c0848-972a-46c6-a393-72f15ba17fff",
                    "72277396-9227-4804-aaf0-abdb4cc94ae3"
                ) {
                    Amount = 131.0,
                    Description = "tE6KxV420emWv3QqH4R6VDTDVfdiAXVdgN9DZ9v4kbQFysa19fDxnqybhHvy13qXVTMyALsFrmMA1AZB7QBygXX7nz4E01aRKAkyyc4RTN23",
                };
                Response.Bill response = await request.Send(client);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.Data["StatusCode"], (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.Data["StatusCode"] >= 300, "Should be larger than 300");
            }
        }

    }
}
