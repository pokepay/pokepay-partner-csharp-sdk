// DO NOT EDIT: File is generated by code generator.
using System;
using System.Net;
using System.Net.Http;
using NUnit.Framework;
using System.Threading.Tasks;
using System.Collections.Generic;

using PokepayPartnerCsharpSdk;

namespace PokepayPartnerCsharpSdk.Test
{
    public class TestCreateBill
    {
        private Client client;

        [OneTimeSetUp]
        public void OneTimeSetup()
        {
            client = new Client("~/.pokepay/test-config.ini");
        }

        [Test]
        public async Task CreateBill0()
        {
            try {
                Request.CreateBill request = new Request.CreateBill(
                    "48d12ee9-31d8-4413-94f1-1b001f010e57",
                    "19d36848-bd87-4b89-a33c-61d0a3c9568d"
                );
                Response.Bill response = await request.Send(client);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.Data["StatusCode"], (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.Data["StatusCode"] >= 300, "Should be larger than 300");
            }
        }

        [Test]
        public async Task CreateBill1()
        {
            try {
                Request.CreateBill request = new Request.CreateBill(
                    "48d12ee9-31d8-4413-94f1-1b001f010e57",
                    "19d36848-bd87-4b89-a33c-61d0a3c9568d"
                ) {
                    Description = "ya4deZm0fSDTtTOJ1ul4n4rd80SnO9JMQZQOi46n24N1Vd6UWqHbjbEB2k2UV3XLhESUPHX6",
                };
                Response.Bill response = await request.Send(client);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.Data["StatusCode"], (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.Data["StatusCode"] >= 300, "Should be larger than 300");
            }
        }

        [Test]
        public async Task CreateBill2()
        {
            try {
                Request.CreateBill request = new Request.CreateBill(
                    "48d12ee9-31d8-4413-94f1-1b001f010e57",
                    "19d36848-bd87-4b89-a33c-61d0a3c9568d"
                ) {
                    Amount = 4215.0,
                    Description = "vpRKl2rU5wN9oKicMImC5FkW3NN6",
                };
                Response.Bill response = await request.Send(client);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.Data["StatusCode"], (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.Data["StatusCode"] >= 300, "Should be larger than 300");
            }
        }

    }
}
