// DO NOT EDIT: File is generated by code generator.
using System;
using System.Net;
using System.Net.Http;
using NUnit.Framework;
using System.Threading.Tasks;
using System.Collections.Generic;

using PokepayPartnerCsharpSdk;

namespace PokepayPartnerCsharpSdk.Test
{
    public class TestCreateOrganization
    {
        private Client client;

        [OneTimeSetUp]
        public void OneTimeSetup()
        {
            client = new Client("~/.pokepay/test-config.ini");
        }

        [Test]
        public async Task CreateOrganization0()
        {
            try {
                Request.CreateOrganization request = new Request.CreateOrganization(
                    "qwdkkgvqZQ",
                    "EwqxxIpXTryBWY7YmTtJYjps5n0FjmTFvO6PZjVX87PLzR29oTCv16fPXjhVlLpKgtr0aXml0I8A7sPYx7KWs9GrfkcGFxlkTYjYgPlxnzpf9XcHD",
                    new string[]{"ec95e83f-9d69-40a0-a220-13776af58397", "87e27238-66f3-4e09-8bf1-aa99bc7c37ff", "e6a64260-4416-4fcd-8a20-fb543b770c77", "48e6cb9b-588b-41b9-9c43-749d9c84f92f", "c814745d-3fc7-4b4d-ab85-1407592df606", "21d6af94-a0f2-4570-9d75-7a7055ec353e", "81a5986e-295a-48a6-9750-76408b8bd733", "f4fa202e-0174-4b2e-bb58-af4ce4becac7", "f6ae1f0c-88a3-472d-9fe4-882057442ac9"},
                    "4BQeMKNjNC@6v4L.com",
                    "dJ9q0nifAU@uGHU.com"
                );
                Response.Organization response = await request.Send(client);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.Data["StatusCode"], (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.Data["StatusCode"] >= 300, "Should be larger than 300");
            }
        }

        [Test]
        public async Task CreateOrganization1()
        {
            try {
                Request.CreateOrganization request = new Request.CreateOrganization(
                    "qwdkkgvqZQ",
                    "EwqxxIpXTryBWY7YmTtJYjps5n0FjmTFvO6PZjVX87PLzR29oTCv16fPXjhVlLpKgtr0aXml0I8A7sPYx7KWs9GrfkcGFxlkTYjYgPlxnzpf9XcHD",
                    new string[]{"ec95e83f-9d69-40a0-a220-13776af58397", "87e27238-66f3-4e09-8bf1-aa99bc7c37ff", "e6a64260-4416-4fcd-8a20-fb543b770c77", "48e6cb9b-588b-41b9-9c43-749d9c84f92f", "c814745d-3fc7-4b4d-ab85-1407592df606", "21d6af94-a0f2-4570-9d75-7a7055ec353e", "81a5986e-295a-48a6-9750-76408b8bd733", "f4fa202e-0174-4b2e-bb58-af4ce4becac7", "f6ae1f0c-88a3-472d-9fe4-882057442ac9"},
                    "4BQeMKNjNC@6v4L.com",
                    "dJ9q0nifAU@uGHU.com"
                ) {
                    ContactName = "Cvc4A5HlCo2a7OllUlOCGYapVIyu0AtoOYT3d8xXDGe31wijgcuuWSuuP7qXIDVYzNjNiLWADYEWxDRpy5o7rEN4eiDqYJVEg5UZOhJAbHwNLgu",
                };
                Response.Organization response = await request.Send(client);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.Data["StatusCode"], (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.Data["StatusCode"] >= 300, "Should be larger than 300");
            }
        }

        [Test]
        public async Task CreateOrganization2()
        {
            try {
                Request.CreateOrganization request = new Request.CreateOrganization(
                    "qwdkkgvqZQ",
                    "EwqxxIpXTryBWY7YmTtJYjps5n0FjmTFvO6PZjVX87PLzR29oTCv16fPXjhVlLpKgtr0aXml0I8A7sPYx7KWs9GrfkcGFxlkTYjYgPlxnzpf9XcHD",
                    new string[]{"ec95e83f-9d69-40a0-a220-13776af58397", "87e27238-66f3-4e09-8bf1-aa99bc7c37ff", "e6a64260-4416-4fcd-8a20-fb543b770c77", "48e6cb9b-588b-41b9-9c43-749d9c84f92f", "c814745d-3fc7-4b4d-ab85-1407592df606", "21d6af94-a0f2-4570-9d75-7a7055ec353e", "81a5986e-295a-48a6-9750-76408b8bd733", "f4fa202e-0174-4b2e-bb58-af4ce4becac7", "f6ae1f0c-88a3-472d-9fe4-882057442ac9"},
                    "4BQeMKNjNC@6v4L.com",
                    "dJ9q0nifAU@uGHU.com"
                ) {
                    BankAccountHolderName = "ï½¢",
                    ContactName = "ky9WURMByjAKTzdQ2llGcXl5Cw9ahtSHvWHxDbu1GOKxoKM3BkiQ5JCNLUQPpDOoGNkBoKxTvABwe33",
                };
                Response.Organization response = await request.Send(client);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.Data["StatusCode"], (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.Data["StatusCode"] >= 300, "Should be larger than 300");
            }
        }

        [Test]
        public async Task CreateOrganization3()
        {
            try {
                Request.CreateOrganization request = new Request.CreateOrganization(
                    "qwdkkgvqZQ",
                    "EwqxxIpXTryBWY7YmTtJYjps5n0FjmTFvO6PZjVX87PLzR29oTCv16fPXjhVlLpKgtr0aXml0I8A7sPYx7KWs9GrfkcGFxlkTYjYgPlxnzpf9XcHD",
                    new string[]{"ec95e83f-9d69-40a0-a220-13776af58397", "87e27238-66f3-4e09-8bf1-aa99bc7c37ff", "e6a64260-4416-4fcd-8a20-fb543b770c77", "48e6cb9b-588b-41b9-9c43-749d9c84f92f", "c814745d-3fc7-4b4d-ab85-1407592df606", "21d6af94-a0f2-4570-9d75-7a7055ec353e", "81a5986e-295a-48a6-9750-76408b8bd733", "f4fa202e-0174-4b2e-bb58-af4ce4becac7", "f6ae1f0c-88a3-472d-9fe4-882057442ac9"},
                    "4BQeMKNjNC@6v4L.com",
                    "dJ9q0nifAU@uGHU.com"
                ) {
                    BankAccount = "37654",
                    BankAccountHolderName = "7",
                    ContactName = "JOyIcULWzrNeMACItmOkY1pUONfZUthj8CTdPwk2g7DYhFuXWtax2gH7mosTYAgSjd1Lu4N1G4DllEfWLsx2f1PjIk5LFEcZYZR1K1ULgGU5oSrsDCn36n92LJoBnxVWA0Bmx0P3sSh52djDx2E8q2Tl06IVYw",
                };
                Response.Organization response = await request.Send(client);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.Data["StatusCode"], (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.Data["StatusCode"] >= 300, "Should be larger than 300");
            }
        }

        [Test]
        public async Task CreateOrganization4()
        {
            try {
                Request.CreateOrganization request = new Request.CreateOrganization(
                    "qwdkkgvqZQ",
                    "EwqxxIpXTryBWY7YmTtJYjps5n0FjmTFvO6PZjVX87PLzR29oTCv16fPXjhVlLpKgtr0aXml0I8A7sPYx7KWs9GrfkcGFxlkTYjYgPlxnzpf9XcHD",
                    new string[]{"ec95e83f-9d69-40a0-a220-13776af58397", "87e27238-66f3-4e09-8bf1-aa99bc7c37ff", "e6a64260-4416-4fcd-8a20-fb543b770c77", "48e6cb9b-588b-41b9-9c43-749d9c84f92f", "c814745d-3fc7-4b4d-ab85-1407592df606", "21d6af94-a0f2-4570-9d75-7a7055ec353e", "81a5986e-295a-48a6-9750-76408b8bd733", "f4fa202e-0174-4b2e-bb58-af4ce4becac7", "f6ae1f0c-88a3-472d-9fe4-882057442ac9"},
                    "4BQeMKNjNC@6v4L.com",
                    "dJ9q0nifAU@uGHU.com"
                ) {
                    BankAccountType = "saving",
                    BankAccount = "12",
                    BankAccountHolderName = "2",
                    ContactName = "g9D4jd9Fi73fT2ekfbMypSoZArmvOOmVqy7LHITpCScM5po6zQrUB5yHtoGfycJYa2GIKQCGBFwcqnjKtXS5ctb0sUDamQiJFavfIlsQjs1Uxv98uoxa9cfqdBZBSSyuPsLgc14jRH1daAJWkWpeGVt7BTtK3VwbUSgXIGfDPEPwHED0KtmDzxL",
                };
                Response.Organization response = await request.Send(client);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.Data["StatusCode"], (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.Data["StatusCode"] >= 300, "Should be larger than 300");
            }
        }

        [Test]
        public async Task CreateOrganization5()
        {
            try {
                Request.CreateOrganization request = new Request.CreateOrganization(
                    "qwdkkgvqZQ",
                    "EwqxxIpXTryBWY7YmTtJYjps5n0FjmTFvO6PZjVX87PLzR29oTCv16fPXjhVlLpKgtr0aXml0I8A7sPYx7KWs9GrfkcGFxlkTYjYgPlxnzpf9XcHD",
                    new string[]{"ec95e83f-9d69-40a0-a220-13776af58397", "87e27238-66f3-4e09-8bf1-aa99bc7c37ff", "e6a64260-4416-4fcd-8a20-fb543b770c77", "48e6cb9b-588b-41b9-9c43-749d9c84f92f", "c814745d-3fc7-4b4d-ab85-1407592df606", "21d6af94-a0f2-4570-9d75-7a7055ec353e", "81a5986e-295a-48a6-9750-76408b8bd733", "f4fa202e-0174-4b2e-bb58-af4ce4becac7", "f6ae1f0c-88a3-472d-9fe4-882057442ac9"},
                    "4BQeMKNjNC@6v4L.com",
                    "dJ9q0nifAU@uGHU.com"
                ) {
                    BankBranchCode = "254",
                    BankAccountType = "current",
                    BankAccount = "36599",
                    BankAccountHolderName = "(",
                    ContactName = "UKhxLe1FMHoh3041czvU7tiTGNYlDyRk3aGMps1HN2Oi8GzWre6yIHCg",
                };
                Response.Organization response = await request.Send(client);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.Data["StatusCode"], (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.Data["StatusCode"] >= 300, "Should be larger than 300");
            }
        }

        [Test]
        public async Task CreateOrganization6()
        {
            try {
                Request.CreateOrganization request = new Request.CreateOrganization(
                    "qwdkkgvqZQ",
                    "EwqxxIpXTryBWY7YmTtJYjps5n0FjmTFvO6PZjVX87PLzR29oTCv16fPXjhVlLpKgtr0aXml0I8A7sPYx7KWs9GrfkcGFxlkTYjYgPlxnzpf9XcHD",
                    new string[]{"ec95e83f-9d69-40a0-a220-13776af58397", "87e27238-66f3-4e09-8bf1-aa99bc7c37ff", "e6a64260-4416-4fcd-8a20-fb543b770c77", "48e6cb9b-588b-41b9-9c43-749d9c84f92f", "c814745d-3fc7-4b4d-ab85-1407592df606", "21d6af94-a0f2-4570-9d75-7a7055ec353e", "81a5986e-295a-48a6-9750-76408b8bd733", "f4fa202e-0174-4b2e-bb58-af4ce4becac7", "f6ae1f0c-88a3-472d-9fe4-882057442ac9"},
                    "4BQeMKNjNC@6v4L.com",
                    "dJ9q0nifAU@uGHU.com"
                ) {
                    BankBranchName = "e3KvTMWtvAOdqc6t4",
                    BankBranchCode = "",
                    BankAccountType = "other",
                    BankAccount = "76902",
                    BankAccountHolderName = " ",
                    ContactName = "k2sqQhlAUNF0Kr6ekdB7WSGlsT24mzzvf0uixfzgMS7DAxRVXjpoYOkLYbJM46YGKDJVQANtfUdHVcsouxX3xI9CHdZGkENDSkRyfWKAxjQWjCB8nFcqmENfDor1zgwF9x3xZsR5bLJPhH3FEHzbfU4cD6smAeqngifjNikqDE3OudXpYhNwFWUAKOnWlhna0lYNQbEnbMVdbi9G5aE3q4g",
                };
                Response.Organization response = await request.Send(client);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.Data["StatusCode"], (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.Data["StatusCode"] >= 300, "Should be larger than 300");
            }
        }

        [Test]
        public async Task CreateOrganization7()
        {
            try {
                Request.CreateOrganization request = new Request.CreateOrganization(
                    "qwdkkgvqZQ",
                    "EwqxxIpXTryBWY7YmTtJYjps5n0FjmTFvO6PZjVX87PLzR29oTCv16fPXjhVlLpKgtr0aXml0I8A7sPYx7KWs9GrfkcGFxlkTYjYgPlxnzpf9XcHD",
                    new string[]{"ec95e83f-9d69-40a0-a220-13776af58397", "87e27238-66f3-4e09-8bf1-aa99bc7c37ff", "e6a64260-4416-4fcd-8a20-fb543b770c77", "48e6cb9b-588b-41b9-9c43-749d9c84f92f", "c814745d-3fc7-4b4d-ab85-1407592df606", "21d6af94-a0f2-4570-9d75-7a7055ec353e", "81a5986e-295a-48a6-9750-76408b8bd733", "f4fa202e-0174-4b2e-bb58-af4ce4becac7", "f6ae1f0c-88a3-472d-9fe4-882057442ac9"},
                    "4BQeMKNjNC@6v4L.com",
                    "dJ9q0nifAU@uGHU.com"
                ) {
                    BankCode = "",
                    BankBranchName = "93gHJA1FfneXYRV",
                    BankBranchCode = "216",
                    BankAccountType = "current",
                    BankAccount = "52",
                    BankAccountHolderName = "ï½£",
                    ContactName = "WEkaIk3Nf304AeRoMBnYRrC4cXtKQ0a4OPrt2tro65RM4SYyWPQ4b5EvFhF0JaiWpiphXqNgzf5XFTYAHJ",
                };
                Response.Organization response = await request.Send(client);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.Data["StatusCode"], (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.Data["StatusCode"] >= 300, "Should be larger than 300");
            }
        }

        [Test]
        public async Task CreateOrganization8()
        {
            try {
                Request.CreateOrganization request = new Request.CreateOrganization(
                    "qwdkkgvqZQ",
                    "EwqxxIpXTryBWY7YmTtJYjps5n0FjmTFvO6PZjVX87PLzR29oTCv16fPXjhVlLpKgtr0aXml0I8A7sPYx7KWs9GrfkcGFxlkTYjYgPlxnzpf9XcHD",
                    new string[]{"ec95e83f-9d69-40a0-a220-13776af58397", "87e27238-66f3-4e09-8bf1-aa99bc7c37ff", "e6a64260-4416-4fcd-8a20-fb543b770c77", "48e6cb9b-588b-41b9-9c43-749d9c84f92f", "c814745d-3fc7-4b4d-ab85-1407592df606", "21d6af94-a0f2-4570-9d75-7a7055ec353e", "81a5986e-295a-48a6-9750-76408b8bd733", "f4fa202e-0174-4b2e-bb58-af4ce4becac7", "f6ae1f0c-88a3-472d-9fe4-882057442ac9"},
                    "4BQeMKNjNC@6v4L.com",
                    "dJ9q0nifAU@uGHU.com"
                ) {
                    BankName = "FeGZi1JIa9NTrkMeAKNU2qNMrw4Jay2YBOful",
                    BankCode = "5929",
                    BankBranchName = "FK5T7Dc8oOst1MM9PmjRD",
                    BankBranchCode = "176",
                    BankAccountType = "current",
                    BankAccount = "73",
                    BankAccountHolderName = "1",
                    ContactName = "O5Tt2uQGKACRqDnzgekX1v8dvD0ApeDNVXLZhDHmMPohPl8jvZE0kmWyBRnvtcRhoAfyfPvqbgkbgVyEBxJxS2dp5fON6g3h5b1QYmVCtk78JxdSgtNZkgpDcQrvPvYu9rBGsdWvnLspaw0X1BOuUcrgAIrlVAxUxxo",
                };
                Response.Organization response = await request.Send(client);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.Data["StatusCode"], (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.Data["StatusCode"] >= 300, "Should be larger than 300");
            }
        }

    }
}
