// DO NOT EDIT: File is generated by code generator.
using System;
using System.Net;
using System.Net.Http;
using NUnit.Framework;
using System.Threading.Tasks;
using System.Collections.Generic;

using PokepayPartnerCsharpSdk;

namespace PokepayPartnerCsharpSdk.Test
{
    public class TestCreateOrganization
    {
        private Client client;

        [OneTimeSetUp]
        public void OneTimeSetup()
        {
            client = new Client("~/.pokepay/test-config.ini");
        }

        [Test]
        public async Task CreateOrganization0()
        {
            try {
                Request.CreateOrganization request = new Request.CreateOrganization(
                    "OmLgcpEGoiN4xK5E5VpiG2J",
                    "o5D4GV7hhIKHAjWJYCUlMhQtwUoXpcQxDZjzRvzNXpH3x2iF",
                    new string[]{"92d9d599-ed70-4942-a093-6d5b336ab28e"},
                    "dgrqVp2N8Q@Yj0Z.com",
                    "mCBDwM6zLb@HR5V.com"
                );
                Response.Organization response = await request.Send(client);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.Data["StatusCode"], (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.Data["StatusCode"] >= 300, "Should be larger than 300");
            }
        }

        [Test]
        public async Task CreateOrganization1()
        {
            try {
                Request.CreateOrganization request = new Request.CreateOrganization(
                    "OmLgcpEGoiN4xK5E5VpiG2J",
                    "o5D4GV7hhIKHAjWJYCUlMhQtwUoXpcQxDZjzRvzNXpH3x2iF",
                    new string[]{"92d9d599-ed70-4942-a093-6d5b336ab28e"},
                    "dgrqVp2N8Q@Yj0Z.com",
                    "mCBDwM6zLb@HR5V.com"
                ) {
                    ContactName = "s4NjmnCkqN4XQ0ga3RSvnC8jHIMkn9fVqRNkcPpVOb6ybl4ea",
                };
                Response.Organization response = await request.Send(client);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.Data["StatusCode"], (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.Data["StatusCode"] >= 300, "Should be larger than 300");
            }
        }

        [Test]
        public async Task CreateOrganization2()
        {
            try {
                Request.CreateOrganization request = new Request.CreateOrganization(
                    "OmLgcpEGoiN4xK5E5VpiG2J",
                    "o5D4GV7hhIKHAjWJYCUlMhQtwUoXpcQxDZjzRvzNXpH3x2iF",
                    new string[]{"92d9d599-ed70-4942-a093-6d5b336ab28e"},
                    "dgrqVp2N8Q@Yj0Z.com",
                    "mCBDwM6zLb@HR5V.com"
                ) {
                    BankAccountHolderName = " ",
                    ContactName = "Ys1E01DXtN7kxfIYjFQbnLReWrUKInJLmid4u9TzwRA84VRaIXZY1XF0",
                };
                Response.Organization response = await request.Send(client);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.Data["StatusCode"], (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.Data["StatusCode"] >= 300, "Should be larger than 300");
            }
        }

        [Test]
        public async Task CreateOrganization3()
        {
            try {
                Request.CreateOrganization request = new Request.CreateOrganization(
                    "OmLgcpEGoiN4xK5E5VpiG2J",
                    "o5D4GV7hhIKHAjWJYCUlMhQtwUoXpcQxDZjzRvzNXpH3x2iF",
                    new string[]{"92d9d599-ed70-4942-a093-6d5b336ab28e"},
                    "dgrqVp2N8Q@Yj0Z.com",
                    "mCBDwM6zLb@HR5V.com"
                ) {
                    BankAccount = "299377",
                    BankAccountHolderName = "(",
                    ContactName = "ri7qz0VIbXSmH4UHqGPRPvRpIiMOWtoGAQhzIWx3WvUKPawYyIf4iE",
                };
                Response.Organization response = await request.Send(client);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.Data["StatusCode"], (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.Data["StatusCode"] >= 300, "Should be larger than 300");
            }
        }

        [Test]
        public async Task CreateOrganization4()
        {
            try {
                Request.CreateOrganization request = new Request.CreateOrganization(
                    "OmLgcpEGoiN4xK5E5VpiG2J",
                    "o5D4GV7hhIKHAjWJYCUlMhQtwUoXpcQxDZjzRvzNXpH3x2iF",
                    new string[]{"92d9d599-ed70-4942-a093-6d5b336ab28e"},
                    "dgrqVp2N8Q@Yj0Z.com",
                    "mCBDwM6zLb@HR5V.com"
                ) {
                    BankAccountType = "current",
                    BankAccount = "34366",
                    BankAccountHolderName = "7",
                    ContactName = "cmnkxM6hlJcNlcmAN607k8GaZP3MgvzgwwL2nlzCbcvWetokhlPcSdNkOrguln7CX23vMJbLKyNZpEVFNS264TaylyWcOGtEBWEpuwVflavSpmTgkifXJitc0vVLf5Rz82z6xgvw9BdiRNo5u4lq4cb85PsN99SZvwnMRblNoqzMeDzbYczT33nRkH26t4QM2oHzXVQekCzs8nEapVKB5SqYQFpxBv37OUfxN0cB",
                };
                Response.Organization response = await request.Send(client);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.Data["StatusCode"], (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.Data["StatusCode"] >= 300, "Should be larger than 300");
            }
        }

        [Test]
        public async Task CreateOrganization5()
        {
            try {
                Request.CreateOrganization request = new Request.CreateOrganization(
                    "OmLgcpEGoiN4xK5E5VpiG2J",
                    "o5D4GV7hhIKHAjWJYCUlMhQtwUoXpcQxDZjzRvzNXpH3x2iF",
                    new string[]{"92d9d599-ed70-4942-a093-6d5b336ab28e"},
                    "dgrqVp2N8Q@Yj0Z.com",
                    "mCBDwM6zLb@HR5V.com"
                ) {
                    BankBranchCode = "",
                    BankAccountType = "current",
                    BankAccount = "666508",
                    BankAccountHolderName = "(",
                    ContactName = "xnGtz2VkNocN5Fw2lGlzIk4JgZQ701ic3l48NuAgJRVAMFDBYmssA3bq1Tg3D8ETeNtXVsfQmQqEZ6PGZxlVUd3ShlNL0Y9XxxdHGLNPPjehHACs9F",
                };
                Response.Organization response = await request.Send(client);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.Data["StatusCode"], (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.Data["StatusCode"] >= 300, "Should be larger than 300");
            }
        }

        [Test]
        public async Task CreateOrganization6()
        {
            try {
                Request.CreateOrganization request = new Request.CreateOrganization(
                    "OmLgcpEGoiN4xK5E5VpiG2J",
                    "o5D4GV7hhIKHAjWJYCUlMhQtwUoXpcQxDZjzRvzNXpH3x2iF",
                    new string[]{"92d9d599-ed70-4942-a093-6d5b336ab28e"},
                    "dgrqVp2N8Q@Yj0Z.com",
                    "mCBDwM6zLb@HR5V.com"
                ) {
                    BankBranchName = "9HR8RMbCbWCWObxQazDfRDTTPfilPEfM1Yk39o7NF983Gwe0tMdMKO3F1",
                    BankBranchCode = "509",
                    BankAccountType = "current",
                    BankAccount = "578923",
                    BankAccountHolderName = ",",
                    ContactName = "KpIBTEKWGf04BE1WekLdL60HJBT4tkR4Pv6HI2Jq3koT48",
                };
                Response.Organization response = await request.Send(client);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.Data["StatusCode"], (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.Data["StatusCode"] >= 300, "Should be larger than 300");
            }
        }

        [Test]
        public async Task CreateOrganization7()
        {
            try {
                Request.CreateOrganization request = new Request.CreateOrganization(
                    "OmLgcpEGoiN4xK5E5VpiG2J",
                    "o5D4GV7hhIKHAjWJYCUlMhQtwUoXpcQxDZjzRvzNXpH3x2iF",
                    new string[]{"92d9d599-ed70-4942-a093-6d5b336ab28e"},
                    "dgrqVp2N8Q@Yj0Z.com",
                    "mCBDwM6zLb@HR5V.com"
                ) {
                    BankCode = "5268",
                    BankBranchName = "hAOAS3mmYijbhxfVDlATTdcBM7HhamadWGE9PVT8t",
                    BankBranchCode = "315",
                    BankAccountType = "other",
                    BankAccount = "32767",
                    BankAccountHolderName = "ï¾Ÿ",
                    ContactName = "ttMfViJ6R5JHOHXy72poXKFqLweLwgbVOEJ2",
                };
                Response.Organization response = await request.Send(client);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.Data["StatusCode"], (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.Data["StatusCode"] >= 300, "Should be larger than 300");
            }
        }

        [Test]
        public async Task CreateOrganization8()
        {
            try {
                Request.CreateOrganization request = new Request.CreateOrganization(
                    "OmLgcpEGoiN4xK5E5VpiG2J",
                    "o5D4GV7hhIKHAjWJYCUlMhQtwUoXpcQxDZjzRvzNXpH3x2iF",
                    new string[]{"92d9d599-ed70-4942-a093-6d5b336ab28e"},
                    "dgrqVp2N8Q@Yj0Z.com",
                    "mCBDwM6zLb@HR5V.com"
                ) {
                    BankName = "Whle6p4e0NUCaB8x9HxsiiQA13",
                    BankCode = "",
                    BankBranchName = "F7UrF23w5QxjmGZOUE",
                    BankBranchCode = "",
                    BankAccountType = "other",
                    BankAccount = "64980",
                    BankAccountHolderName = ",",
                    ContactName = "VUoPHGe8VpYFEsCAZxvmzUlCQ6jXUvpBi6eFbQ9VerLFfGYUdjDv8bdvOqPJHRSJwZywPczme53pe0cTWQpvnFvno",
                };
                Response.Organization response = await request.Send(client);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.Data["StatusCode"], (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.Data["StatusCode"] >= 300, "Should be larger than 300");
            }
        }

    }
}
