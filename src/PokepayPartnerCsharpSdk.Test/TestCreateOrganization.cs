// DO NOT EDIT: File is generated by code generator.
using System;
using System.Net;
using System.Net.Http;
using NUnit.Framework;
using System.Threading.Tasks;
using System.Collections.Generic;

using PokepayPartnerCsharpSdk;

namespace PokepayPartnerCsharpSdk.Test
{
    public class TestCreateOrganization
    {
        private Client client;

        [OneTimeSetUp]
        public void OneTimeSetup()
        {
            client = new Client("~/.pokepay/test-config.ini");
        }

        [Test]
        public async Task CreateOrganization0()
        {
            try {
                Request.CreateOrganization request = new Request.CreateOrganization(
                    "M3mKKWyblmmAHRS",
                    "YCV0EDw10SY48ZoA8oj9alrEKYDjBWPKCwbirzvScUvjsqVkcSInvOjFPIL9qlVMwg0ANEHCj5eM805Swtsg2NkJBDvuxWoqdLq3QmHRbZpwbPRidVG7B6hajGJrCJBxTKH0YUW8iwJJuJPCjlaztijN3vebjT869RjYRPCqvnZ1Yzdr",
                    new string[]{"c162839b-9e5f-4047-9ea9-3e480c0210b7", "76573a0f-38a9-4258-8b03-f77eaed499ce", "3f42ae17-176f-452e-877e-fc44d08801ac", "806d367c-5f7b-4a70-b171-6518af67b3ea", "cf8860d9-1eba-4b55-a134-28b2a935ccce", "e7ca0592-bd20-413b-8e98-6337c02f2f1f", "1381cbea-cee0-433f-90d7-802b62852894", "13909617-cfe2-4dd4-8c5b-13c1aebf60aa", "588c51db-d5b8-4af3-8528-8d8de287cdd4"},
                    "9CjYdhYyR9@ZtWh.com",
                    "MAKSZHQ2Tj@ahc0.com"
                );
                Response.Organization response = await request.Send(client);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.Data["StatusCode"], (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.Data["StatusCode"] >= 300, "Should be larger than 300");
            }
        }

        [Test]
        public async Task CreateOrganization1()
        {
            try {
                Request.CreateOrganization request = new Request.CreateOrganization(
                    "M3mKKWyblmmAHRS",
                    "YCV0EDw10SY48ZoA8oj9alrEKYDjBWPKCwbirzvScUvjsqVkcSInvOjFPIL9qlVMwg0ANEHCj5eM805Swtsg2NkJBDvuxWoqdLq3QmHRbZpwbPRidVG7B6hajGJrCJBxTKH0YUW8iwJJuJPCjlaztijN3vebjT869RjYRPCqvnZ1Yzdr",
                    new string[]{"c162839b-9e5f-4047-9ea9-3e480c0210b7", "76573a0f-38a9-4258-8b03-f77eaed499ce", "3f42ae17-176f-452e-877e-fc44d08801ac", "806d367c-5f7b-4a70-b171-6518af67b3ea", "cf8860d9-1eba-4b55-a134-28b2a935ccce", "e7ca0592-bd20-413b-8e98-6337c02f2f1f", "1381cbea-cee0-433f-90d7-802b62852894", "13909617-cfe2-4dd4-8c5b-13c1aebf60aa", "588c51db-d5b8-4af3-8528-8d8de287cdd4"},
                    "9CjYdhYyR9@ZtWh.com",
                    "MAKSZHQ2Tj@ahc0.com"
                ) {
                    ContactName = "ASAcEibjku1fdQetgL0O7DlAFrkXVihIdQWu7J4NYirXryPP6taqbm6hsnA9hELkacVB4dzDqQ1LbTyVIgVP7fIz1xemnrDx9P7HPwLX5",
                };
                Response.Organization response = await request.Send(client);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.Data["StatusCode"], (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.Data["StatusCode"] >= 300, "Should be larger than 300");
            }
        }

        [Test]
        public async Task CreateOrganization2()
        {
            try {
                Request.CreateOrganization request = new Request.CreateOrganization(
                    "M3mKKWyblmmAHRS",
                    "YCV0EDw10SY48ZoA8oj9alrEKYDjBWPKCwbirzvScUvjsqVkcSInvOjFPIL9qlVMwg0ANEHCj5eM805Swtsg2NkJBDvuxWoqdLq3QmHRbZpwbPRidVG7B6hajGJrCJBxTKH0YUW8iwJJuJPCjlaztijN3vebjT869RjYRPCqvnZ1Yzdr",
                    new string[]{"c162839b-9e5f-4047-9ea9-3e480c0210b7", "76573a0f-38a9-4258-8b03-f77eaed499ce", "3f42ae17-176f-452e-877e-fc44d08801ac", "806d367c-5f7b-4a70-b171-6518af67b3ea", "cf8860d9-1eba-4b55-a134-28b2a935ccce", "e7ca0592-bd20-413b-8e98-6337c02f2f1f", "1381cbea-cee0-433f-90d7-802b62852894", "13909617-cfe2-4dd4-8c5b-13c1aebf60aa", "588c51db-d5b8-4af3-8528-8d8de287cdd4"},
                    "9CjYdhYyR9@ZtWh.com",
                    "MAKSZHQ2Tj@ahc0.com"
                ) {
                    BankAccountHolderName = "7",
                    ContactName = "WZKuWWf4n5wNPq2rjN28QfQLnQ9Qr2gs4rAyEVt2ws7WkJzpgGUX4mtxobZ9ZCpNJGZG6LzTWIbd8ZNVrafdiivNn4NbNLXIdoiqtrelImUNmLeKEfXUc2dQExu22E4bXnTsrAuXzcUztcjpDcIzv8TjKb1dIcQKtgPEpt9Ynsu0LI4",
                };
                Response.Organization response = await request.Send(client);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.Data["StatusCode"], (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.Data["StatusCode"] >= 300, "Should be larger than 300");
            }
        }

        [Test]
        public async Task CreateOrganization3()
        {
            try {
                Request.CreateOrganization request = new Request.CreateOrganization(
                    "M3mKKWyblmmAHRS",
                    "YCV0EDw10SY48ZoA8oj9alrEKYDjBWPKCwbirzvScUvjsqVkcSInvOjFPIL9qlVMwg0ANEHCj5eM805Swtsg2NkJBDvuxWoqdLq3QmHRbZpwbPRidVG7B6hajGJrCJBxTKH0YUW8iwJJuJPCjlaztijN3vebjT869RjYRPCqvnZ1Yzdr",
                    new string[]{"c162839b-9e5f-4047-9ea9-3e480c0210b7", "76573a0f-38a9-4258-8b03-f77eaed499ce", "3f42ae17-176f-452e-877e-fc44d08801ac", "806d367c-5f7b-4a70-b171-6518af67b3ea", "cf8860d9-1eba-4b55-a134-28b2a935ccce", "e7ca0592-bd20-413b-8e98-6337c02f2f1f", "1381cbea-cee0-433f-90d7-802b62852894", "13909617-cfe2-4dd4-8c5b-13c1aebf60aa", "588c51db-d5b8-4af3-8528-8d8de287cdd4"},
                    "9CjYdhYyR9@ZtWh.com",
                    "MAKSZHQ2Tj@ahc0.com"
                ) {
                    BankAccount = "",
                    BankAccountHolderName = "X",
                    ContactName = "453YpOK96EoFGxVJNTeRlFM4Xw2YneFRtau24yc1kusN7qW2yhhPFbHNPhRgnqYnUlh",
                };
                Response.Organization response = await request.Send(client);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.Data["StatusCode"], (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.Data["StatusCode"] >= 300, "Should be larger than 300");
            }
        }

        [Test]
        public async Task CreateOrganization4()
        {
            try {
                Request.CreateOrganization request = new Request.CreateOrganization(
                    "M3mKKWyblmmAHRS",
                    "YCV0EDw10SY48ZoA8oj9alrEKYDjBWPKCwbirzvScUvjsqVkcSInvOjFPIL9qlVMwg0ANEHCj5eM805Swtsg2NkJBDvuxWoqdLq3QmHRbZpwbPRidVG7B6hajGJrCJBxTKH0YUW8iwJJuJPCjlaztijN3vebjT869RjYRPCqvnZ1Yzdr",
                    new string[]{"c162839b-9e5f-4047-9ea9-3e480c0210b7", "76573a0f-38a9-4258-8b03-f77eaed499ce", "3f42ae17-176f-452e-877e-fc44d08801ac", "806d367c-5f7b-4a70-b171-6518af67b3ea", "cf8860d9-1eba-4b55-a134-28b2a935ccce", "e7ca0592-bd20-413b-8e98-6337c02f2f1f", "1381cbea-cee0-433f-90d7-802b62852894", "13909617-cfe2-4dd4-8c5b-13c1aebf60aa", "588c51db-d5b8-4af3-8528-8d8de287cdd4"},
                    "9CjYdhYyR9@ZtWh.com",
                    "MAKSZHQ2Tj@ahc0.com"
                ) {
                    BankAccountType = "other",
                    BankAccount = "5",
                    BankAccountHolderName = "/",
                    ContactName = "Adcz57ZOWsDr0Djt9M12BOno1AcjM96oftC7mHhiSDgXKvVy5paxKD2XcOfyMo26iqol80j1t4n3lpnoezOx6Ov6eGwjQCqxdtQnDY4S9N4HhJ5rCsX",
                };
                Response.Organization response = await request.Send(client);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.Data["StatusCode"], (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.Data["StatusCode"] >= 300, "Should be larger than 300");
            }
        }

        [Test]
        public async Task CreateOrganization5()
        {
            try {
                Request.CreateOrganization request = new Request.CreateOrganization(
                    "M3mKKWyblmmAHRS",
                    "YCV0EDw10SY48ZoA8oj9alrEKYDjBWPKCwbirzvScUvjsqVkcSInvOjFPIL9qlVMwg0ANEHCj5eM805Swtsg2NkJBDvuxWoqdLq3QmHRbZpwbPRidVG7B6hajGJrCJBxTKH0YUW8iwJJuJPCjlaztijN3vebjT869RjYRPCqvnZ1Yzdr",
                    new string[]{"c162839b-9e5f-4047-9ea9-3e480c0210b7", "76573a0f-38a9-4258-8b03-f77eaed499ce", "3f42ae17-176f-452e-877e-fc44d08801ac", "806d367c-5f7b-4a70-b171-6518af67b3ea", "cf8860d9-1eba-4b55-a134-28b2a935ccce", "e7ca0592-bd20-413b-8e98-6337c02f2f1f", "1381cbea-cee0-433f-90d7-802b62852894", "13909617-cfe2-4dd4-8c5b-13c1aebf60aa", "588c51db-d5b8-4af3-8528-8d8de287cdd4"},
                    "9CjYdhYyR9@ZtWh.com",
                    "MAKSZHQ2Tj@ahc0.com"
                ) {
                    BankBranchCode = "280",
                    BankAccountType = "saving",
                    BankAccount = "4217",
                    BankAccountHolderName = "ï¾™",
                    ContactName = "pIh03BvqB7CzLjYHoO28zEE65UlKtMCe12MUV2dxrA2428zEWnFZLX87qtedPzV8",
                };
                Response.Organization response = await request.Send(client);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.Data["StatusCode"], (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.Data["StatusCode"] >= 300, "Should be larger than 300");
            }
        }

        [Test]
        public async Task CreateOrganization6()
        {
            try {
                Request.CreateOrganization request = new Request.CreateOrganization(
                    "M3mKKWyblmmAHRS",
                    "YCV0EDw10SY48ZoA8oj9alrEKYDjBWPKCwbirzvScUvjsqVkcSInvOjFPIL9qlVMwg0ANEHCj5eM805Swtsg2NkJBDvuxWoqdLq3QmHRbZpwbPRidVG7B6hajGJrCJBxTKH0YUW8iwJJuJPCjlaztijN3vebjT869RjYRPCqvnZ1Yzdr",
                    new string[]{"c162839b-9e5f-4047-9ea9-3e480c0210b7", "76573a0f-38a9-4258-8b03-f77eaed499ce", "3f42ae17-176f-452e-877e-fc44d08801ac", "806d367c-5f7b-4a70-b171-6518af67b3ea", "cf8860d9-1eba-4b55-a134-28b2a935ccce", "e7ca0592-bd20-413b-8e98-6337c02f2f1f", "1381cbea-cee0-433f-90d7-802b62852894", "13909617-cfe2-4dd4-8c5b-13c1aebf60aa", "588c51db-d5b8-4af3-8528-8d8de287cdd4"},
                    "9CjYdhYyR9@ZtWh.com",
                    "MAKSZHQ2Tj@ahc0.com"
                ) {
                    BankBranchName = "diYCurcmVOPZzwM",
                    BankBranchCode = "871",
                    BankAccountType = "saving",
                    BankAccount = "",
                    BankAccountHolderName = "ï½·",
                    ContactName = "pW9b9NBdczTSynCfTiWLEN2pEbq7ZeB8PVJkE9NzaeTptZ5kX9rLpagdWQnEnTlLyubwibc5uG9Y4cn6ApRZ5NX6gFb5nuODlmm9rpn022H3wQmNFzbLFmfFSz1uperYHhU5vbLxW8",
                };
                Response.Organization response = await request.Send(client);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.Data["StatusCode"], (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.Data["StatusCode"] >= 300, "Should be larger than 300");
            }
        }

        [Test]
        public async Task CreateOrganization7()
        {
            try {
                Request.CreateOrganization request = new Request.CreateOrganization(
                    "M3mKKWyblmmAHRS",
                    "YCV0EDw10SY48ZoA8oj9alrEKYDjBWPKCwbirzvScUvjsqVkcSInvOjFPIL9qlVMwg0ANEHCj5eM805Swtsg2NkJBDvuxWoqdLq3QmHRbZpwbPRidVG7B6hajGJrCJBxTKH0YUW8iwJJuJPCjlaztijN3vebjT869RjYRPCqvnZ1Yzdr",
                    new string[]{"c162839b-9e5f-4047-9ea9-3e480c0210b7", "76573a0f-38a9-4258-8b03-f77eaed499ce", "3f42ae17-176f-452e-877e-fc44d08801ac", "806d367c-5f7b-4a70-b171-6518af67b3ea", "cf8860d9-1eba-4b55-a134-28b2a935ccce", "e7ca0592-bd20-413b-8e98-6337c02f2f1f", "1381cbea-cee0-433f-90d7-802b62852894", "13909617-cfe2-4dd4-8c5b-13c1aebf60aa", "588c51db-d5b8-4af3-8528-8d8de287cdd4"},
                    "9CjYdhYyR9@ZtWh.com",
                    "MAKSZHQ2Tj@ahc0.com"
                ) {
                    BankCode = "",
                    BankBranchName = "q15XpRuu89q3NykiRPYO2oQiAY",
                    BankBranchCode = "382",
                    BankAccountType = "other",
                    BankAccount = "589",
                    BankAccountHolderName = "ï½¢",
                    ContactName = "SjxgCW3jFlgob7yobgqdqFleVhpCebdmmx3jJLFYo72YjP5pod5QaLCZTmFLxumOnvrupx16EXCUXyPfCabjEtMliIf7wKoPmNQWU6zl3h0ZGoCe5IIfEbaRlpdhTTQpQoSRT6b0IY83jSy9CLjq8yjjxInoBnLVw5NxHP7CI9Yb5tOQ2qp6BlopujNmJIuVKWvjUjC0u3f2Lo9NqlV",
                };
                Response.Organization response = await request.Send(client);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.Data["StatusCode"], (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.Data["StatusCode"] >= 300, "Should be larger than 300");
            }
        }

        [Test]
        public async Task CreateOrganization8()
        {
            try {
                Request.CreateOrganization request = new Request.CreateOrganization(
                    "M3mKKWyblmmAHRS",
                    "YCV0EDw10SY48ZoA8oj9alrEKYDjBWPKCwbirzvScUvjsqVkcSInvOjFPIL9qlVMwg0ANEHCj5eM805Swtsg2NkJBDvuxWoqdLq3QmHRbZpwbPRidVG7B6hajGJrCJBxTKH0YUW8iwJJuJPCjlaztijN3vebjT869RjYRPCqvnZ1Yzdr",
                    new string[]{"c162839b-9e5f-4047-9ea9-3e480c0210b7", "76573a0f-38a9-4258-8b03-f77eaed499ce", "3f42ae17-176f-452e-877e-fc44d08801ac", "806d367c-5f7b-4a70-b171-6518af67b3ea", "cf8860d9-1eba-4b55-a134-28b2a935ccce", "e7ca0592-bd20-413b-8e98-6337c02f2f1f", "1381cbea-cee0-433f-90d7-802b62852894", "13909617-cfe2-4dd4-8c5b-13c1aebf60aa", "588c51db-d5b8-4af3-8528-8d8de287cdd4"},
                    "9CjYdhYyR9@ZtWh.com",
                    "MAKSZHQ2Tj@ahc0.com"
                ) {
                    BankName = "uXM4yE9kd7lV6QKkz6REzoI7cZYW4c0GyNh6EpQVqX4KE4B5KRDxSSp",
                    BankCode = "0682",
                    BankBranchName = "QLy6PO73cHGKqjz0v27dHE8reh",
                    BankBranchCode = "",
                    BankAccountType = "current",
                    BankAccount = "09",
                    BankAccountHolderName = "ï¾ƒ",
                    ContactName = "2n0EGsPPbvQvYkAPBJ7wmgCWNKDP1enxAKZBD2FhNoFZKIbAgSoRCKxxDEWQZO9yz4Mc4BWxPS7UaVHpVi4pZYZOGKLSewvJuaN97ObUNQZ0A0Rwk2Z2omGatDjCcJfOMaGd4kHySUJ",
                };
                Response.Organization response = await request.Send(client);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.Data["StatusCode"], (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.Data["StatusCode"] >= 300, "Should be larger than 300");
            }
        }

    }
}
