// DO NOT EDIT: File is generated by code generator.
using System;
using System.Net;
using System.Net.Http;
using NUnit.Framework;
using System.Threading.Tasks;
using System.Collections.Generic;

using PokepayPartnerCsharpSdk;

namespace PokepayPartnerCsharpSdk.Test
{
    public class TestCreateOrganization
    {
        private Client client;

        [OneTimeSetUp]
        public void OneTimeSetup()
        {
            client = new Client("~/.pokepay/test-config.ini");
        }

        [Test]
        public async Task CreateOrganization0()
        {
            try {
                Request.CreateOrganization request = new Request.CreateOrganization(
                    "RTn7KvwTWIA8nNdWGu",
                    "LIlwIdreJxE3kI78zf4UhlPEYSyPJMRXzAv9dFtk0GaNZbxFuTsdqxMc4YsFXTQ0SPAYxMOI2buzdfVX76tCzsAYxC6putLLeYUVSfjCdmiJAkOZjrUlpDDvT3OxvKMlKLswUne1OVkp",
                    new string[]{"b90f6355-cd4e-40b0-9d1c-b003b56693ae", "83224063-4c88-49f4-8f2a-f3c6f8c9671a", "f7929802-1abf-402f-bd34-fed26da1cb3a", "86b78336-215f-4e22-b2c6-5fe6d4cab25f"},
                    "eW58HbZPAe@YVef.com",
                    "tf5HOOK27a@cBxM.com"
                );
                Response.Organization response = await request.Send(client);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.Data["StatusCode"], (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.Data["StatusCode"] >= 300, "Should be larger than 300");
            }
        }

        [Test]
        public async Task CreateOrganization1()
        {
            try {
                Request.CreateOrganization request = new Request.CreateOrganization(
                    "RTn7KvwTWIA8nNdWGu",
                    "LIlwIdreJxE3kI78zf4UhlPEYSyPJMRXzAv9dFtk0GaNZbxFuTsdqxMc4YsFXTQ0SPAYxMOI2buzdfVX76tCzsAYxC6putLLeYUVSfjCdmiJAkOZjrUlpDDvT3OxvKMlKLswUne1OVkp",
                    new string[]{"b90f6355-cd4e-40b0-9d1c-b003b56693ae", "83224063-4c88-49f4-8f2a-f3c6f8c9671a", "f7929802-1abf-402f-bd34-fed26da1cb3a", "86b78336-215f-4e22-b2c6-5fe6d4cab25f"},
                    "eW58HbZPAe@YVef.com",
                    "tf5HOOK27a@cBxM.com"
                ) {
                    ContactName = "x5l6MC8rwOgrKcswRJRUPeXbGjKqucKeGWZpcvQqzUHDPrPjMWdHf7B6NeiOkJO667GIicPCTDBCiy71y2hP4un48H6oDUEUMYmpOLQtJ5X8TqOee4isCfSnhfqrYMsPZ2GLFGWkvVE8SP3xCh0uLUr3Sy9M7HXM6fTqlfdHgjyOg2mNxi20RBpU3Vx3obeYOq",
                };
                Response.Organization response = await request.Send(client);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.Data["StatusCode"], (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.Data["StatusCode"] >= 300, "Should be larger than 300");
            }
        }

        [Test]
        public async Task CreateOrganization2()
        {
            try {
                Request.CreateOrganization request = new Request.CreateOrganization(
                    "RTn7KvwTWIA8nNdWGu",
                    "LIlwIdreJxE3kI78zf4UhlPEYSyPJMRXzAv9dFtk0GaNZbxFuTsdqxMc4YsFXTQ0SPAYxMOI2buzdfVX76tCzsAYxC6putLLeYUVSfjCdmiJAkOZjrUlpDDvT3OxvKMlKLswUne1OVkp",
                    new string[]{"b90f6355-cd4e-40b0-9d1c-b003b56693ae", "83224063-4c88-49f4-8f2a-f3c6f8c9671a", "f7929802-1abf-402f-bd34-fed26da1cb3a", "86b78336-215f-4e22-b2c6-5fe6d4cab25f"},
                    "eW58HbZPAe@YVef.com",
                    "tf5HOOK27a@cBxM.com"
                ) {
                    BankAccountHolderName = "(",
                    ContactName = "jIcsBO1eyRWFIns0G3tnaglivGb4eoIPJeu2XqpzMzkC5dNhQ1CQo4WezJ2px7Z0i1ldcgpBuoeB2TNHxD3pgr7c6InAwOXf08MBi",
                };
                Response.Organization response = await request.Send(client);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.Data["StatusCode"], (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.Data["StatusCode"] >= 300, "Should be larger than 300");
            }
        }

        [Test]
        public async Task CreateOrganization3()
        {
            try {
                Request.CreateOrganization request = new Request.CreateOrganization(
                    "RTn7KvwTWIA8nNdWGu",
                    "LIlwIdreJxE3kI78zf4UhlPEYSyPJMRXzAv9dFtk0GaNZbxFuTsdqxMc4YsFXTQ0SPAYxMOI2buzdfVX76tCzsAYxC6putLLeYUVSfjCdmiJAkOZjrUlpDDvT3OxvKMlKLswUne1OVkp",
                    new string[]{"b90f6355-cd4e-40b0-9d1c-b003b56693ae", "83224063-4c88-49f4-8f2a-f3c6f8c9671a", "f7929802-1abf-402f-bd34-fed26da1cb3a", "86b78336-215f-4e22-b2c6-5fe6d4cab25f"},
                    "eW58HbZPAe@YVef.com",
                    "tf5HOOK27a@cBxM.com"
                ) {
                    BankAccount = "97",
                    BankAccountHolderName = "ｾ",
                    ContactName = "3L5iaCDoiCqaBSkGkaxZIcAYECHek6yFHN0vG12039gjAaGqsNZhNtMA019vqyA3LQmGzwGLqJlmETBOgr5EOqEp0P9ToXWvyAsPWammRvI6QtZCx",
                };
                Response.Organization response = await request.Send(client);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.Data["StatusCode"], (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.Data["StatusCode"] >= 300, "Should be larger than 300");
            }
        }

        [Test]
        public async Task CreateOrganization4()
        {
            try {
                Request.CreateOrganization request = new Request.CreateOrganization(
                    "RTn7KvwTWIA8nNdWGu",
                    "LIlwIdreJxE3kI78zf4UhlPEYSyPJMRXzAv9dFtk0GaNZbxFuTsdqxMc4YsFXTQ0SPAYxMOI2buzdfVX76tCzsAYxC6putLLeYUVSfjCdmiJAkOZjrUlpDDvT3OxvKMlKLswUne1OVkp",
                    new string[]{"b90f6355-cd4e-40b0-9d1c-b003b56693ae", "83224063-4c88-49f4-8f2a-f3c6f8c9671a", "f7929802-1abf-402f-bd34-fed26da1cb3a", "86b78336-215f-4e22-b2c6-5fe6d4cab25f"},
                    "eW58HbZPAe@YVef.com",
                    "tf5HOOK27a@cBxM.com"
                ) {
                    BankAccountType = "other",
                    BankAccount = "4358",
                    BankAccountHolderName = "ｦ",
                    ContactName = "dXJOMTSTE",
                };
                Response.Organization response = await request.Send(client);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.Data["StatusCode"], (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.Data["StatusCode"] >= 300, "Should be larger than 300");
            }
        }

        [Test]
        public async Task CreateOrganization5()
        {
            try {
                Request.CreateOrganization request = new Request.CreateOrganization(
                    "RTn7KvwTWIA8nNdWGu",
                    "LIlwIdreJxE3kI78zf4UhlPEYSyPJMRXzAv9dFtk0GaNZbxFuTsdqxMc4YsFXTQ0SPAYxMOI2buzdfVX76tCzsAYxC6putLLeYUVSfjCdmiJAkOZjrUlpDDvT3OxvKMlKLswUne1OVkp",
                    new string[]{"b90f6355-cd4e-40b0-9d1c-b003b56693ae", "83224063-4c88-49f4-8f2a-f3c6f8c9671a", "f7929802-1abf-402f-bd34-fed26da1cb3a", "86b78336-215f-4e22-b2c6-5fe6d4cab25f"},
                    "eW58HbZPAe@YVef.com",
                    "tf5HOOK27a@cBxM.com"
                ) {
                    BankBranchCode = "750",
                    BankAccountType = "current",
                    BankAccount = "5870053",
                    BankAccountHolderName = "\\",
                    ContactName = "ueMAKmGaBViSnsTq14PVGrEklqsNNrpSe7jHgezVnEas35VcXSmiU1kzoGTiaWiAtEcdoLPVjXmMD0EbHEeT21rGH9Ms9fMlg87ac8wiRJIwgWMdUy8uG6C5PRZQB5Hg7dunrtLyV63Hr0oPGWJ9UvhTk2FX5rmzwjGJx7OiIFoiugm0kx6dvh48qgPB",
                };
                Response.Organization response = await request.Send(client);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.Data["StatusCode"], (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.Data["StatusCode"] >= 300, "Should be larger than 300");
            }
        }

        [Test]
        public async Task CreateOrganization6()
        {
            try {
                Request.CreateOrganization request = new Request.CreateOrganization(
                    "RTn7KvwTWIA8nNdWGu",
                    "LIlwIdreJxE3kI78zf4UhlPEYSyPJMRXzAv9dFtk0GaNZbxFuTsdqxMc4YsFXTQ0SPAYxMOI2buzdfVX76tCzsAYxC6putLLeYUVSfjCdmiJAkOZjrUlpDDvT3OxvKMlKLswUne1OVkp",
                    new string[]{"b90f6355-cd4e-40b0-9d1c-b003b56693ae", "83224063-4c88-49f4-8f2a-f3c6f8c9671a", "f7929802-1abf-402f-bd34-fed26da1cb3a", "86b78336-215f-4e22-b2c6-5fe6d4cab25f"},
                    "eW58HbZPAe@YVef.com",
                    "tf5HOOK27a@cBxM.com"
                ) {
                    BankBranchName = "ByD8IlG2gmJRvrdijgXuePFfsGNYOY7VoKB557BsicNDcWX1",
                    BankBranchCode = "",
                    BankAccountType = "other",
                    BankAccount = "471",
                    BankAccountHolderName = "\\",
                    ContactName = "ciWSgMd3emOlxvG8bvesviiOlmpc36LGpcI4joTo9DY8OKb5KLBQMTg5jFHzudC4JqPAfHBKyxnv5Irkq59yDNJ9eSLCjd2o20rKPkFRTOO4Fu3RxsDuJa7HSdcP732DW3vxY9WNC5",
                };
                Response.Organization response = await request.Send(client);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.Data["StatusCode"], (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.Data["StatusCode"] >= 300, "Should be larger than 300");
            }
        }

        [Test]
        public async Task CreateOrganization7()
        {
            try {
                Request.CreateOrganization request = new Request.CreateOrganization(
                    "RTn7KvwTWIA8nNdWGu",
                    "LIlwIdreJxE3kI78zf4UhlPEYSyPJMRXzAv9dFtk0GaNZbxFuTsdqxMc4YsFXTQ0SPAYxMOI2buzdfVX76tCzsAYxC6putLLeYUVSfjCdmiJAkOZjrUlpDDvT3OxvKMlKLswUne1OVkp",
                    new string[]{"b90f6355-cd4e-40b0-9d1c-b003b56693ae", "83224063-4c88-49f4-8f2a-f3c6f8c9671a", "f7929802-1abf-402f-bd34-fed26da1cb3a", "86b78336-215f-4e22-b2c6-5fe6d4cab25f"},
                    "eW58HbZPAe@YVef.com",
                    "tf5HOOK27a@cBxM.com"
                ) {
                    BankCode = "1817",
                    BankBranchName = "3TvbM",
                    BankBranchCode = "",
                    BankAccountType = "other",
                    BankAccount = "30397",
                    BankAccountHolderName = "N",
                    ContactName = "BzDBMwBwQpNbfUHoTKocCQmofKVn6CcNEIeKSjhiIUOJ3CmcBKKfxpYKN6jg83EUJCBhXaNFnjANjgTB05sjgkKA1BIwB1TOzfI2AZTghnUgvnaJ7g1WoRKZfQiw2Zb1OlFiT7B4dPW",
                };
                Response.Organization response = await request.Send(client);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.Data["StatusCode"], (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.Data["StatusCode"] >= 300, "Should be larger than 300");
            }
        }

        [Test]
        public async Task CreateOrganization8()
        {
            try {
                Request.CreateOrganization request = new Request.CreateOrganization(
                    "RTn7KvwTWIA8nNdWGu",
                    "LIlwIdreJxE3kI78zf4UhlPEYSyPJMRXzAv9dFtk0GaNZbxFuTsdqxMc4YsFXTQ0SPAYxMOI2buzdfVX76tCzsAYxC6putLLeYUVSfjCdmiJAkOZjrUlpDDvT3OxvKMlKLswUne1OVkp",
                    new string[]{"b90f6355-cd4e-40b0-9d1c-b003b56693ae", "83224063-4c88-49f4-8f2a-f3c6f8c9671a", "f7929802-1abf-402f-bd34-fed26da1cb3a", "86b78336-215f-4e22-b2c6-5fe6d4cab25f"},
                    "eW58HbZPAe@YVef.com",
                    "tf5HOOK27a@cBxM.com"
                ) {
                    BankName = "Xf1pe4oHU0bQmlngSt",
                    BankCode = "",
                    BankBranchName = "7yMrH2XyR1X8TAkxrNKhWhgRUkINW2id8qVUAVPgzscVwHe4",
                    BankBranchCode = "919",
                    BankAccountType = "other",
                    BankAccount = "",
                    BankAccountHolderName = "ｦ",
                    ContactName = "wnAgPgKFr1nwsNvsY9e3I0oEupIT3HyA",
                };
                Response.Organization response = await request.Send(client);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.Data["StatusCode"], (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.Data["StatusCode"] >= 300, "Should be larger than 300");
            }
        }

    }
}
