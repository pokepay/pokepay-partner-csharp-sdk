// DO NOT EDIT: File is generated by code generator.
using System;
using System.Net;
using System.Net.Http;
using NUnit.Framework;
using System.Threading.Tasks;
using System.Collections.Generic;

using PokepayPartnerCsharpSdk;

namespace PokepayPartnerCsharpSdk.Test
{
    public class CreateOrganizationTest
    {
        private Client client;

        [OneTimeSetUp]
        public void OneTimeSetup()
        {
            client = new Client("~/.pokepay/test-config.ini");
        }

        [Test]
        public async Task testCreateOrganization()
        {
            string code = "test-org" + Util.RandomString(6);
            string name = "テスト組織" + Util.RandomString(4);
            string[] private_money_ids = new string[]{
                "4b138a4c-8944-4f98-a5c4-96d3c1c415eb"
            };
            string issuer_admin_user_email = Util.RandomString(6) + "@pokepay-tests.jp";
            string member_admin_user_email = Util.RandomString(6) + "@pokepay-tests.jp";
            Response.Organization response = await new Request.CreateOrganization(
                code,
                name,
                private_money_ids,
                issuer_admin_user_email,
                member_admin_user_email
            ).Send(client);
            Assert.AreEqual(code, response.Code);
            Assert.AreEqual(name, response.Name);
        }

        [Test]
        public async Task testCreateOrganizationWithMetadata()
        {
            string code = "test-org" + Util.RandomString(6);
            string name = "テスト組織" + Util.RandomString(4);
            string[] private_money_ids = new string[]{
                "4b138a4c-8944-4f98-a5c4-96d3c1c415eb"
            };
            string issuer_admin_user_email = Util.RandomString(6) + "@pokepay-tests.jp";
            string member_admin_user_email = Util.RandomString(6) + "@pokepay-tests.jp";
            string bank_code = "1234";
            string bank_name = Util.RandomString(4) + "銀行";
            string bank_branch_code = "123";
            string bank_branch_name = Util.RandomString(4) + "支店";
            string bank_account_type = "saving";
            string bank_account = "1234567";
            string bank_account_holder_name = "ﾌｸｻﾞﾜﾕｷﾁ";
            string contact_name = "佐藤清";
            Response.Organization response = await new Request.CreateOrganization(
                code,
                name,
                private_money_ids,
                issuer_admin_user_email,
                member_admin_user_email
            ) {

                BankCode = bank_code,
                BankName = bank_name,
                BankBranchCode = bank_branch_code,
                BankBranchName = bank_branch_name,
                BankAccountType = bank_account_type,
                BankAccount = bank_account,
                BankAccountHolderName = bank_account_holder_name,
                ContactName = contact_name,}
            .Send(client);
            Assert.AreEqual(code, response.Code);
            Assert.AreEqual(name, response.Name);
        }
    }
}
