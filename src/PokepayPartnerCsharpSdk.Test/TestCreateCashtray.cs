// DO NOT EDIT: File is generated by code generator.
using System;
using System.Net;
using System.Net.Http;
using NUnit.Framework;
using System.Threading.Tasks;
using System.Collections.Generic;

using PokepayPartnerCsharpSdk;

namespace PokepayPartnerCsharpSdk.Test
{
    public class TestCreateCashtray
    {
        private Client client;

        [OneTimeSetUp]
        public void OneTimeSetup()
        {
            client = new Client("~/.pokepay/test-config.ini");
        }

        [Test]
        public async Task CreateCashtray0()
        {
            try {
                Request.CreateCashtray request = new Request.CreateCashtray(
                    "ddade3c9-f78a-4b6b-a138-1c0565067e39",
                    "bbf4e81d-e013-457d-84a0-f38d57f738d8",
                    2649.0
                );
                Response.Cashtray response = await request.Send(client);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.Data["StatusCode"], (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.Data["StatusCode"] >= 300, "Should be larger than 300");
            }
        }

        [Test]
        public async Task CreateCashtray1()
        {
            try {
                Request.CreateCashtray request = new Request.CreateCashtray(
                    "ddade3c9-f78a-4b6b-a138-1c0565067e39",
                    "bbf4e81d-e013-457d-84a0-f38d57f738d8",
                    2649.0
                ) {
                    ExpiresIn = 3532,
                };
                Response.Cashtray response = await request.Send(client);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.Data["StatusCode"], (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.Data["StatusCode"] >= 300, "Should be larger than 300");
            }
        }

        [Test]
        public async Task CreateCashtray2()
        {
            try {
                Request.CreateCashtray request = new Request.CreateCashtray(
                    "ddade3c9-f78a-4b6b-a138-1c0565067e39",
                    "bbf4e81d-e013-457d-84a0-f38d57f738d8",
                    2649.0
                ) {
                    Description = "nfVy0TAgXzw1sSohsNjy6SxeKx5U1FFlMldjE23SHNAqIT1XF26gevTBc5IOdpCZ6Updb7qfraA8HyS1f2rOYiUmhDP4oCHVOSys5ylYNMya1",
                    ExpiresIn = 7373,
                };
                Response.Cashtray response = await request.Send(client);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.Data["StatusCode"], (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.Data["StatusCode"] >= 300, "Should be larger than 300");
            }
        }

    }
}
