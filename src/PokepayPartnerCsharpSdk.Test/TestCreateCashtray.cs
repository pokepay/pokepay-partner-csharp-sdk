// DO NOT EDIT: File is generated by code generator.
using System;
using System.Net;
using System.Net.Http;
using NUnit.Framework;
using System.Threading.Tasks;
using System.Collections.Generic;

using PokepayPartnerCsharpSdk;

namespace PokepayPartnerCsharpSdk.Test
{
    public class TestCreateCashtray
    {
        private Client client;

        [OneTimeSetUp]
        public void OneTimeSetup()
        {
            client = new Client("~/.pokepay/test-config.ini");
        }

        [Test]
        public async Task CreateCashtray0()
        {
            try {
                Request.CreateCashtray request = new Request.CreateCashtray(
                    "b3c63172-d953-457e-a339-7d01be064640",
                    "a3772553-4d6b-4d7a-8f47-be37b4a422ba",
                    6940.0
                );
                Response.Cashtray response = await request.Send(client);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.Data["StatusCode"], (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.Data["StatusCode"] >= 300, "Should be larger than 300");
            }
        }

        [Test]
        public async Task CreateCashtray1()
        {
            try {
                Request.CreateCashtray request = new Request.CreateCashtray(
                    "b3c63172-d953-457e-a339-7d01be064640",
                    "a3772553-4d6b-4d7a-8f47-be37b4a422ba",
                    6940.0
                ) {
                    ExpiresIn = 4314,
                };
                Response.Cashtray response = await request.Send(client);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.Data["StatusCode"], (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.Data["StatusCode"] >= 300, "Should be larger than 300");
            }
        }

        [Test]
        public async Task CreateCashtray2()
        {
            try {
                Request.CreateCashtray request = new Request.CreateCashtray(
                    "b3c63172-d953-457e-a339-7d01be064640",
                    "a3772553-4d6b-4d7a-8f47-be37b4a422ba",
                    6940.0
                ) {
                    Description = "HZ0X61Q5Wqdk6mAkDrruArxHlHmgERnkSFlVxCZj3vYHD4AwFni35PG2wNL7t5lWdebvhffGwq34pkrjIBv1yHua0scm1PC7rySjypfL2dX6isHhTZfkP0e8mx2y8RPRc0rz3cqQ303IgDAumpg96H7G",
                    ExpiresIn = 6683,
                };
                Response.Cashtray response = await request.Send(client);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.Data["StatusCode"], (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.Data["StatusCode"] >= 300, "Should be larger than 300");
            }
        }

    }
}
