// DO NOT EDIT: File is generated by code generator.
using System;
using System.Net;
using System.Net.Http;
using NUnit.Framework;
using System.Threading.Tasks;
using System.Collections.Generic;

using PokepayPartnerCsharpSdk;

namespace PokepayPartnerCsharpSdk.Test
{
    public class TestCreateCustomerAccount
    {
        private Client client;

        [OneTimeSetUp]
        public void OneTimeSetup()
        {
            client = new Client("~/.pokepay/test-config.ini");
        }

        [Test]
        public async Task CreateCustomerAccount0()
        {
            try {
                Request.CreateCustomerAccount request = new Request.CreateCustomerAccount(
                    "133cf21c-1af0-4497-9d78-59c4454f29bf"
                );
                Response.AccountWithUser response = await request.Send(client);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.Data["StatusCode"], (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.Data["StatusCode"] >= 300, "Should be larger than 300");
            }
        }

        [Test]
        public async Task CreateCustomerAccount1()
        {
            try {
                Request.CreateCustomerAccount request = new Request.CreateCustomerAccount(
                    "133cf21c-1af0-4497-9d78-59c4454f29bf"
                ) {
                    ExternalId = "SLjAdu6F8Vl08n6eYVXyn58BoiyultCyHPo1p",
                };
                Response.AccountWithUser response = await request.Send(client);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.Data["StatusCode"], (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.Data["StatusCode"] >= 300, "Should be larger than 300");
            }
        }

        [Test]
        public async Task CreateCustomerAccount2()
        {
            try {
                Request.CreateCustomerAccount request = new Request.CreateCustomerAccount(
                    "133cf21c-1af0-4497-9d78-59c4454f29bf"
                ) {
                    AccountName = "63LYONjAQVMHKEI8cjLLBoqoVkCZuTdhKqmTdgwXwMpJw50Q3VTdABKGp7hTT9HCzul8iDs8KAJEGJF87JDA6uSd0jxZZsgytd9WV0wcdGbZR5mcKD1FIW9jMXGzKKUYeDLAySV4gboNzfTMfmtIYmACb86jZYYG4A",
                    ExternalId = "EE7YldDcYw5vxxcIAf",
                };
                Response.AccountWithUser response = await request.Send(client);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.Data["StatusCode"], (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.Data["StatusCode"] >= 300, "Should be larger than 300");
            }
        }

        [Test]
        public async Task CreateCustomerAccount3()
        {
            try {
                Request.CreateCustomerAccount request = new Request.CreateCustomerAccount(
                    "133cf21c-1af0-4497-9d78-59c4454f29bf"
                ) {
                    UserName = "veQ5PmlpTaUM0LabSmPeA8j5vHTq9eUYBocTzKamwg0Ik7yMpdZS4EovQkEBQmyGJ2IA2mmm9PWoLaWBjyMKnNrvqFd7Bg4ZZu1Cg6cI8OqqzDclIHxJ4kYp5Y1GrAV4hfinhcHTlnLRIFWZGkaygUJKW7BPj5Kh2IVBntToYfhLHYxlMI48p8PqiqKHU7q35Va7x52D8zAMS5dpsSXrrhcwu9y84v0KIozYmNqMU4j4f180fP5c1L5nGf",
                    AccountName = "00wrDtFm6jbMqVAxCFSfj1txkrXIWBmRcHBKdL8v3HnQPr0adtOcmsWDhIgxkOgBGf2G4wIjrclsbDSrRpMr",
                    ExternalId = "6g1byJ6zLQH6XRXfjWfobqzBBH6G",
                };
                Response.AccountWithUser response = await request.Send(client);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.Data["StatusCode"], (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.Data["StatusCode"] >= 300, "Should be larger than 300");
            }
        }

    }
}
