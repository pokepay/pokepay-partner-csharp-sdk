// DO NOT EDIT: File is generated by code generator.
using System;
using System.Net;
using System.Net.Http;
using NUnit.Framework;
using System.Threading.Tasks;
using System.Collections.Generic;

using PokepayPartnerCsharpSdk;

namespace PokepayPartnerCsharpSdk.Test
{
    public class TestUpdateCashtray
    {
        private Client client;

        [OneTimeSetUp]
        public void OneTimeSetup()
        {
            client = new Client("~/.pokepay/test-config.ini");
        }

        [Test]
        public async Task UpdateCashtray0()
        {
            try {
                Request.UpdateCashtray request = new Request.UpdateCashtray(
                    "82d89497-2a49-4f1a-9099-3e85a161946e"
                );
                Response.Cashtray response = await request.Send(client);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.Data["StatusCode"], (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.Data["StatusCode"] >= 300, "Should be larger than 300");
            }
        }

        [Test]
        public async Task UpdateCashtray1()
        {
            try {
                Request.UpdateCashtray request = new Request.UpdateCashtray(
                    "82d89497-2a49-4f1a-9099-3e85a161946e"
                ) {
                    ExpiresIn = 5062,
                };
                Response.Cashtray response = await request.Send(client);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.Data["StatusCode"], (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.Data["StatusCode"] >= 300, "Should be larger than 300");
            }
        }

        [Test]
        public async Task UpdateCashtray2()
        {
            try {
                Request.UpdateCashtray request = new Request.UpdateCashtray(
                    "82d89497-2a49-4f1a-9099-3e85a161946e"
                ) {
                    Description = "bjWPv4dquOpGqZJ7ZMTVfqyBvQZk99q7HfgaU8olqOJpVFDTi6dTgORFTFcugbFBTv8tXrgRhwGWGymuMOTz90A1wqvakp0vqDSkXeQkUsjZl2aXtLTDhZvqKiDWdPxPCA9oCxn",
                    ExpiresIn = 4596,
                };
                Response.Cashtray response = await request.Send(client);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.Data["StatusCode"], (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.Data["StatusCode"] >= 300, "Should be larger than 300");
            }
        }

        [Test]
        public async Task UpdateCashtray3()
        {
            try {
                Request.UpdateCashtray request = new Request.UpdateCashtray(
                    "82d89497-2a49-4f1a-9099-3e85a161946e"
                ) {
                    Amount = 6291.0,
                    Description = "hZRBgsfJCGrafVXODvEsGZ3WgOLsn5ooTwbPA6SzCK3wihTMvS7t13GLnkcglZ03TCdg903n78V0g2gdT7p1wCGRAMlM4TbGqmoWxgxM5JUVFq7PAlxbolnc5RP8fnRcbnLfB0kBtdgrJ5lsM68MQ4Sq4NGuq",
                    ExpiresIn = 311,
                };
                Response.Cashtray response = await request.Send(client);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.Data["StatusCode"], (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.Data["StatusCode"] >= 300, "Should be larger than 300");
            }
        }

    }
}
