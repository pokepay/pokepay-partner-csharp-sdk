// DO NOT EDIT: File is generated by code generator.
#nullable enable
using System;
using System.Net;
using System.Net.Http;
using NUnit.Framework;
using System.Threading.Tasks;

using PokepayPartnerCsharpSdk;

namespace PokepayPartnerCsharpSdk.Test
{
    public class TestUpdateCashtray
    {
        private Client? client;

        [OneTimeSetUp]
        public void OneTimeSetup()
        {
            client = new Client("~/.pokepay/test-config.ini");
        }

        [Test]
        public async Task UpdateCashtray0()
        {
            try {
                Request.UpdateCashtray request = new Request.UpdateCashtray(
                    "078a6209-978f-4e61-87e4-28b418f2b26b"
                );
                Response.Cashtray response = await request.Send(client!);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.StatusCode!, (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.StatusCode >= 300, "Should be larger than 300");
            }
        }

        [Test]
        public async Task UpdateCashtray1()
        {
            try {
                Request.UpdateCashtray request = new Request.UpdateCashtray(
                    "078a6209-978f-4e61-87e4-28b418f2b26b"
                ) {
                    ExpiresIn = 5888
                };
                Response.Cashtray response = await request.Send(client!);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.StatusCode!, (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.StatusCode >= 300, "Should be larger than 300");
            }
        }

        [Test]
        public async Task UpdateCashtray2()
        {
            try {
                Request.UpdateCashtray request = new Request.UpdateCashtray(
                    "078a6209-978f-4e61-87e4-28b418f2b26b"
                ) {
                    Description = "ySUJYrKI48UyLa",
                    ExpiresIn = 2951
                };
                Response.Cashtray response = await request.Send(client!);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.StatusCode!, (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.StatusCode >= 300, "Should be larger than 300");
            }
        }

        [Test]
        public async Task UpdateCashtray3()
        {
            try {
                Request.UpdateCashtray request = new Request.UpdateCashtray(
                    "078a6209-978f-4e61-87e4-28b418f2b26b"
                ) {
                    Amount = 9213,
                    Description = "aqg9M9b56VUQzIG7Yr7fsBnFuG56tOVY8vi9Z9lrbTGfh4QbdPS2DfLew9jsvLcXjFRqAsdyU0EjzFGdoCEVoN09yrlyTlHcxkp2h",
                    ExpiresIn = 4965
                };
                Response.Cashtray response = await request.Send(client!);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.StatusCode!, (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.StatusCode >= 300, "Should be larger than 300");
            }
        }

    }
}
