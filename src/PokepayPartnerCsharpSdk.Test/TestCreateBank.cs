// DO NOT EDIT: File is generated by code generator.
using System;
using System.Net;
using System.Net.Http;
using NUnit.Framework;
using System.Threading.Tasks;
using System.Collections.Generic;

using PokepayPartnerCsharpSdk;

namespace PokepayPartnerCsharpSdk.Test
{
    public class TestCreateBank
    {
        private Client client;

        [OneTimeSetUp]
        public void OneTimeSetup()
        {
            client = new Client("~/.pokepay/test-config.ini");
        }

        [Test]
        public async Task CreateBank0()
        {
            try {
                Request.CreateBank request = new Request.CreateBank(
                    "fdbcc7c9-aefb-4f8b-b4af-3cb45eb58378",
                    "88d770a4-c68d-4e27-bb7f-e24cfe9835b3",
                    "frFPuEOVKpPzDCyUBg3VaVg5lQKirhrBQImBbFTGr24vRn0V1KmKqNhpuD1AS4IxvpFPGaTF6gXtd3nJyyNe74Q2bvFtDokudzPS7PJ09whlF6",
                    "CVlMKFHkTHEGRWUBVUZa1"
                );
                Response.BankRegisteringInfo response = await request.Send(client);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.Data["StatusCode"], (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.Data["StatusCode"] >= 300, "Should be larger than 300");
            }
        }

        [Test]
        public async Task CreateBank1()
        {
            try {
                Request.CreateBank request = new Request.CreateBank(
                    "fdbcc7c9-aefb-4f8b-b4af-3cb45eb58378",
                    "88d770a4-c68d-4e27-bb7f-e24cfe9835b3",
                    "frFPuEOVKpPzDCyUBg3VaVg5lQKirhrBQImBbFTGr24vRn0V1KmKqNhpuD1AS4IxvpFPGaTF6gXtd3nJyyNe74Q2bvFtDokudzPS7PJ09whlF6",
                    "CVlMKFHkTHEGRWUBVUZa1"
                ) {
                    Birthdate = "rmAx",
                };
                Response.BankRegisteringInfo response = await request.Send(client);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.Data["StatusCode"], (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.Data["StatusCode"] >= 300, "Should be larger than 300");
            }
        }

        [Test]
        public async Task CreateBank2()
        {
            try {
                Request.CreateBank request = new Request.CreateBank(
                    "fdbcc7c9-aefb-4f8b-b4af-3cb45eb58378",
                    "88d770a4-c68d-4e27-bb7f-e24cfe9835b3",
                    "frFPuEOVKpPzDCyUBg3VaVg5lQKirhrBQImBbFTGr24vRn0V1KmKqNhpuD1AS4IxvpFPGaTF6gXtd3nJyyNe74Q2bvFtDokudzPS7PJ09whlF6",
                    "CVlMKFHkTHEGRWUBVUZa1"
                ) {
                    Email = "zFUF6ihvlI@4uoO.com",
                    Birthdate = "nKraNj",
                };
                Response.BankRegisteringInfo response = await request.Send(client);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.Data["StatusCode"], (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.Data["StatusCode"] >= 300, "Should be larger than 300");
            }
        }

    }
}
