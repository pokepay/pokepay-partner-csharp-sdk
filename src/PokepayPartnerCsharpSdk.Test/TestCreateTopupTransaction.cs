// DO NOT EDIT: File is generated by code generator.
using System;
using System.Net;
using System.Net.Http;
using NUnit.Framework;
using System.Threading.Tasks;
using System.Collections.Generic;

using PokepayPartnerCsharpSdk;

namespace PokepayPartnerCsharpSdk.Test
{
    public class TestCreateTopupTransaction
    {
        private Client client;

        [OneTimeSetUp]
        public void OneTimeSetup()
        {
            client = new Client("~/.pokepay/test-config.ini");
        }

        [Test]
        public async Task CreateTopupTransaction0()
        {
            try {
                Request.CreateTopupTransaction request = new Request.CreateTopupTransaction(
                    "9af3b345-8ee5-4ff2-8c4e-7127a8577917",
                    "bd51d245-8c4b-4321-be4d-9459c0099b05",
                    "6d4ad3a8-07fb-4773-aad2-cc8044238a66"
                );
                Response.TransactionDetail response = await request.Send(client);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.Data["StatusCode"], (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.Data["StatusCode"] >= 300, "Should be larger than 300");
            }
        }

        [Test]
        public async Task CreateTopupTransaction1()
        {
            try {
                Request.CreateTopupTransaction request = new Request.CreateTopupTransaction(
                    "9af3b345-8ee5-4ff2-8c4e-7127a8577917",
                    "bd51d245-8c4b-4321-be4d-9459c0099b05",
                    "6d4ad3a8-07fb-4773-aad2-cc8044238a66"
                ) {
                    RequestId = "590665db-07b9-4f76-8072-72e918278a87",
                };
                Response.TransactionDetail response = await request.Send(client);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.Data["StatusCode"], (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.Data["StatusCode"] >= 300, "Should be larger than 300");
            }
        }

        [Test]
        public async Task CreateTopupTransaction2()
        {
            try {
                Request.CreateTopupTransaction request = new Request.CreateTopupTransaction(
                    "9af3b345-8ee5-4ff2-8c4e-7127a8577917",
                    "bd51d245-8c4b-4321-be4d-9459c0099b05",
                    "6d4ad3a8-07fb-4773-aad2-cc8044238a66"
                ) {
                    Metadata = "{\"key\":\"value\"}",
                    RequestId = "030cd959-7ae9-433d-907b-8d0018d356a9",
                };
                Response.TransactionDetail response = await request.Send(client);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.Data["StatusCode"], (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.Data["StatusCode"] >= 300, "Should be larger than 300");
            }
        }

        [Test]
        public async Task CreateTopupTransaction3()
        {
            try {
                Request.CreateTopupTransaction request = new Request.CreateTopupTransaction(
                    "9af3b345-8ee5-4ff2-8c4e-7127a8577917",
                    "bd51d245-8c4b-4321-be4d-9459c0099b05",
                    "6d4ad3a8-07fb-4773-aad2-cc8044238a66"
                ) {
                    Description = "8HndtLKgFWIeB413C8zcpa0a0ipuLt3IQKQQHb6fikVg8U3XBigR3jya01c",
                    Metadata = "{\"key\":\"value\"}",
                    RequestId = "7061914c-07b7-4315-a564-a305d539bee8",
                };
                Response.TransactionDetail response = await request.Send(client);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.Data["StatusCode"], (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.Data["StatusCode"] >= 300, "Should be larger than 300");
            }
        }

        [Test]
        public async Task CreateTopupTransaction4()
        {
            try {
                Request.CreateTopupTransaction request = new Request.CreateTopupTransaction(
                    "9af3b345-8ee5-4ff2-8c4e-7127a8577917",
                    "bd51d245-8c4b-4321-be4d-9459c0099b05",
                    "6d4ad3a8-07fb-4773-aad2-cc8044238a66"
                ) {
                    PointExpiresAt = "2020-09-15T01:10:05.000000Z",
                    Description = "i5NIsblUeDquiQL8YRreNoLAWMJdywYSICtYcbHl2ktF16gpa54attROZcBbejZS9wdnnNKINI7vj8qEDPsdJ8J",
                    Metadata = "{\"key\":\"value\"}",
                    RequestId = "3859c46b-1a83-4a4c-b64b-2e24d6c94e1d",
                };
                Response.TransactionDetail response = await request.Send(client);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.Data["StatusCode"], (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.Data["StatusCode"] >= 300, "Should be larger than 300");
            }
        }

        [Test]
        public async Task CreateTopupTransaction5()
        {
            try {
                Request.CreateTopupTransaction request = new Request.CreateTopupTransaction(
                    "9af3b345-8ee5-4ff2-8c4e-7127a8577917",
                    "bd51d245-8c4b-4321-be4d-9459c0099b05",
                    "6d4ad3a8-07fb-4773-aad2-cc8044238a66"
                ) {
                    PointAmount = 5478,
                    PointExpiresAt = "2021-01-21T20:23:24.000000Z",
                    Description = "UtzmymsdzvhUXmrc210VozYCz4wR9Gfv1ooHMcqzJF0zVNZ8zHF5mnetJol0g7uhhZVwBBSB9NQuG198o4cE8ye8xiCptr8X3OQ",
                    Metadata = "{\"key\":\"value\"}",
                    RequestId = "b17cfe53-f624-4d0a-a77d-66734f88b581",
                };
                Response.TransactionDetail response = await request.Send(client);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.Data["StatusCode"], (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.Data["StatusCode"] >= 300, "Should be larger than 300");
            }
        }

        [Test]
        public async Task CreateTopupTransaction6()
        {
            try {
                Request.CreateTopupTransaction request = new Request.CreateTopupTransaction(
                    "9af3b345-8ee5-4ff2-8c4e-7127a8577917",
                    "bd51d245-8c4b-4321-be4d-9459c0099b05",
                    "6d4ad3a8-07fb-4773-aad2-cc8044238a66"
                ) {
                    MoneyAmount = 4875,
                    PointAmount = 5757,
                    PointExpiresAt = "2022-07-23T01:40:42.000000Z",
                    Description = "cvMVMzYpfEHHq4AVCPhpFJVl2NE9OohrFLhvABt92YjeNGkeRyZCxDwnyuzPdWfYw482S6oHFsZh9ksnqTSKQYaLtgBF21Mao0iMx72McbAtuQfbwPK5Ol2Udeu5ClBnNsqGtwvAjO8SQrjpTlUKU7ix6vD3BTnNcaIv4Cy2qiGNeSDJueWNAF2iLh",
                    Metadata = "{\"key\":\"value\"}",
                    RequestId = "8c138815-f8eb-46c2-8330-e7b84bbc97ed",
                };
                Response.TransactionDetail response = await request.Send(client);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.Data["StatusCode"], (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.Data["StatusCode"] >= 300, "Should be larger than 300");
            }
        }

        [Test]
        public async Task CreateTopupTransaction7()
        {
            try {
                Request.CreateTopupTransaction request = new Request.CreateTopupTransaction(
                    "9af3b345-8ee5-4ff2-8c4e-7127a8577917",
                    "bd51d245-8c4b-4321-be4d-9459c0099b05",
                    "6d4ad3a8-07fb-4773-aad2-cc8044238a66"
                ) {
                    BearPointShopId = "10405a8e-bc57-4118-816f-fc5d8281775d",
                    MoneyAmount = 339,
                    PointAmount = 7237,
                    PointExpiresAt = "2022-04-12T16:41:10.000000Z",
                    Description = "4Yfnz5e3bjXKldANGzSZe49qKV1rholLnfHAgpNJKDDEjuzSmETPUL6TDRxNm",
                    Metadata = "{\"key\":\"value\"}",
                    RequestId = "51ebc46a-bd9a-49dd-8bd7-5914be8dc5d0",
                };
                Response.TransactionDetail response = await request.Send(client);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.Data["StatusCode"], (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.Data["StatusCode"] >= 300, "Should be larger than 300");
            }
        }

    }
}
