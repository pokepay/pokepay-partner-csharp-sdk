// DO NOT EDIT: File is generated by code generator.
using System;
using System.Net;
using System.Net.Http;
using NUnit.Framework;
using System.Threading.Tasks;
using System.Collections.Generic;

using PokepayPartnerCsharpSdk;

namespace PokepayPartnerCsharpSdk.Test
{
    public class TestCreateTopupTransactionWithCheck
    {
        private Client client;

        [OneTimeSetUp]
        public void OneTimeSetup()
        {
            client = new Client("~/.pokepay/test-config.ini");
        }

        [Test]
        public async Task CreateTopupTransactionWithCheck0()
        {
            try {
                Request.CreateTopupTransactionWithCheck request = new Request.CreateTopupTransactionWithCheck(
                    "dc030c0c-6c7f-4682-92ce-75e45ad0b685",
                    "b6ee65ea-7073-4a36-8831-b54e211c4880"
                );
                Response.TransactionDetail response = await request.Send(client);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.Data["StatusCode"], (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.Data["StatusCode"] >= 300, "Should be larger than 300");
            }
        }

        [Test]
        public async Task CreateTopupTransactionWithCheck1()
        {
            try {
                Request.CreateTopupTransactionWithCheck request = new Request.CreateTopupTransactionWithCheck(
                    "dc030c0c-6c7f-4682-92ce-75e45ad0b685",
                    "b6ee65ea-7073-4a36-8831-b54e211c4880"
                ) {
                    RequestId = "e6ed6a3f-9e2b-4554-b320-a9f7c8e59eac",
                };
                Response.TransactionDetail response = await request.Send(client);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.Data["StatusCode"], (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.Data["StatusCode"] >= 300, "Should be larger than 300");
            }
        }

    }
}
