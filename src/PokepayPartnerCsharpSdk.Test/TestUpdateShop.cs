// DO NOT EDIT: File is generated by code generator.
using System;
using System.Net;
using System.Net.Http;
using NUnit.Framework;
using System.Threading.Tasks;
using System.Collections.Generic;

using PokepayPartnerCsharpSdk;

namespace PokepayPartnerCsharpSdk.Test
{
    public class TestUpdateShop
    {
        private Client client;

        [OneTimeSetUp]
        public void OneTimeSetup()
        {
            client = new Client("~/.pokepay/test-config.ini");
        }

        [Test]
        public async Task UpdateShop0()
        {
            try {
                Request.UpdateShop request = new Request.UpdateShop(
                    "5358a83d-ea9c-4005-9ea5-e6eafc313bde"
                );
                Response.ShopWithAccounts response = await request.Send(client);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.Data["StatusCode"], (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.Data["StatusCode"] >= 300, "Should be larger than 300");
            }
        }

        [Test]
        public async Task UpdateShop1()
        {
            try {
                Request.UpdateShop request = new Request.UpdateShop(
                    "5358a83d-ea9c-4005-9ea5-e6eafc313bde"
                ) {
                    Status = "disabled",
                };
                Response.ShopWithAccounts response = await request.Send(client);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.Data["StatusCode"], (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.Data["StatusCode"] >= 300, "Should be larger than 300");
            }
        }

        [Test]
        public async Task UpdateShop2()
        {
            try {
                Request.UpdateShop request = new Request.UpdateShop(
                    "5358a83d-ea9c-4005-9ea5-e6eafc313bde"
                ) {
                    CanTopupPrivateMoneyIds = new string[]{"dcfb578d-7b39-446c-acee-cf08c804e1be", "0f7e87ef-46ca-4cbf-81f2-661c98dcfc17", "660b55b4-b8d3-4363-9e37-0548e93bd74c", "916cc49d-981a-477f-a958-74b699823d51", "954517bd-c1ba-4341-a017-a54208116c85", "d4bd6bf7-261b-4919-be48-1e42bb336ae3", "a9fcc179-7347-4c09-a018-4c131f187d13", "666ac644-49d7-4333-8c1c-9db3a442eb69"},
                    Status = "disabled",
                };
                Response.ShopWithAccounts response = await request.Send(client);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.Data["StatusCode"], (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.Data["StatusCode"] >= 300, "Should be larger than 300");
            }
        }

        [Test]
        public async Task UpdateShop3()
        {
            try {
                Request.UpdateShop request = new Request.UpdateShop(
                    "5358a83d-ea9c-4005-9ea5-e6eafc313bde"
                ) {
                    PrivateMoneyIds = new string[]{"0618230d-69aa-42ce-bdfa-aae756f353eb"},
                    CanTopupPrivateMoneyIds = new string[]{"5914cde3-6908-42e8-8f6c-a5725f9b34f1", "93091e5b-d303-4906-971e-5eba7f234e8c", "d1a5208a-bf5f-43c8-ab90-6c52186d0a90", "b8dea402-689b-4c72-96c3-f29b0b1e6c3c", "f8f8f63d-a01c-424b-bee5-eff6d0c0fc3e", "a757ba67-6ea1-410f-b4cb-57fd2ad5a978", "516787de-c7fd-4615-9ef3-1f693dde7f1a", "4d691f27-3af9-4f75-b8eb-e3219bc4a1be", "3adfa789-5ec6-4ced-9f0c-07d97fdac590"},
                    Status = "active",
                };
                Response.ShopWithAccounts response = await request.Send(client);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.Data["StatusCode"], (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.Data["StatusCode"] >= 300, "Should be larger than 300");
            }
        }

        [Test]
        public async Task UpdateShop4()
        {
            try {
                Request.UpdateShop request = new Request.UpdateShop(
                    "5358a83d-ea9c-4005-9ea5-e6eafc313bde"
                ) {
                    ExternalId = "OxbLKURDXejCW4y7CcfCoxp2CfEcBRYg",
                    PrivateMoneyIds = new string[]{},
                    CanTopupPrivateMoneyIds = new string[]{"1cb01ab0-cae0-4521-910e-35dd2c979c04", "cc884c0f-7343-464b-ae74-f7e632ea7edc", "b62b3e62-d412-4368-b643-67b227db776c"},
                    Status = "active",
                };
                Response.ShopWithAccounts response = await request.Send(client);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.Data["StatusCode"], (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.Data["StatusCode"] >= 300, "Should be larger than 300");
            }
        }

        [Test]
        public async Task UpdateShop5()
        {
            try {
                Request.UpdateShop request = new Request.UpdateShop(
                    "5358a83d-ea9c-4005-9ea5-e6eafc313bde"
                ) {
                    Email = "YLbEM5VL9m@RcTT.com",
                    ExternalId = "DmXd5ipI",
                    PrivateMoneyIds = new string[]{"600bb697-caab-4b35-a3eb-f3ea0d12c8ec", "a09cc82b-f263-439c-b120-9c78a42ddefe", "b4e16e0d-f285-4005-83b4-78fa92807374", "18d95329-f9fc-4415-886d-7c1487382ad2", "c816db30-1f89-425d-815b-609b4bf88bdd"},
                    CanTopupPrivateMoneyIds = new string[]{},
                    Status = "disabled",
                };
                Response.ShopWithAccounts response = await request.Send(client);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.Data["StatusCode"], (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.Data["StatusCode"] >= 300, "Should be larger than 300");
            }
        }

        [Test]
        public async Task UpdateShop6()
        {
            try {
                Request.UpdateShop request = new Request.UpdateShop(
                    "5358a83d-ea9c-4005-9ea5-e6eafc313bde"
                ) {
                    Tel = "00508346",
                    Email = "SZUO6uR59x@zNto.com",
                    ExternalId = "qeZ509vSit5cg1HWk1gi5IqSHr4",
                    PrivateMoneyIds = new string[]{"97d0e0fc-7ac0-4c8b-9ed6-e0c1a62f4b2a", "3f375e94-71d4-4ad7-8c66-42558be18bfa"},
                    CanTopupPrivateMoneyIds = new string[]{"aae91d10-4029-4dee-9b76-db6183d191e3"},
                    Status = "active",
                };
                Response.ShopWithAccounts response = await request.Send(client);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.Data["StatusCode"], (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.Data["StatusCode"] >= 300, "Should be larger than 300");
            }
        }

        [Test]
        public async Task UpdateShop7()
        {
            try {
                Request.UpdateShop request = new Request.UpdateShop(
                    "5358a83d-ea9c-4005-9ea5-e6eafc313bde"
                ) {
                    Address = "2YaKtXzx2nGf4r4Zt3kuB6t5O7kE9I91OyCZ9GdFhQjfZfa20qig6NxtZuXjCdLPnLnHpQqZXcAP5Yy5LRTrn3A4X4X5IzvLL0NCL4rfnKLXroppxl0qSMivjSUY6SdpYZDTrXer6OLOzFqqjV5dLybZloNCQZVKp8aHFxpt7tP8RTTwLqVTKNQ9fAR1Tsg48lcEJaw",
                    Tel = "09961222",
                    Email = "hthNOdqc1N@NucM.com",
                    ExternalId = "Zf",
                    PrivateMoneyIds = new string[]{"4af1ae82-b833-4511-8a0e-68dbcf6779b0", "0aa3259b-9689-4b4d-8b69-b173b4b0e5ed", "8dd93951-f3a2-4196-936e-6125b1623ca9", "8b5b422f-68d6-437e-bcbc-81c392946722", "4c1437c7-c860-47f5-a6dc-681ad012dd32", "8d532b8a-7847-4aac-a309-b4cf2ad924e8", "2e575ab3-0b19-49de-9241-b237a072b509", "15a02d5c-5ec4-4c6f-833f-2110426b97f3", "251815c2-d4f5-4e8c-9be1-68151ab8bd7f", "3256d664-dac6-4cad-ad37-e6be791213f1"},
                    CanTopupPrivateMoneyIds = new string[]{"f214498e-b913-484f-8ebf-b05537128ccd"},
                    Status = "disabled",
                };
                Response.ShopWithAccounts response = await request.Send(client);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.Data["StatusCode"], (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.Data["StatusCode"] >= 300, "Should be larger than 300");
            }
        }

        [Test]
        public async Task UpdateShop8()
        {
            try {
                Request.UpdateShop request = new Request.UpdateShop(
                    "5358a83d-ea9c-4005-9ea5-e6eafc313bde"
                ) {
                    PostalCode = "028-2947",
                    Address = "oAiPnhZfqR5uT1TKxCYkWGqhepptS5",
                    Tel = "095-520464",
                    Email = "eFTEvKiKbw@MrQp.com",
                    ExternalId = "z65UG",
                    PrivateMoneyIds = new string[]{"43ee6611-699c-44ce-88b4-983e4f1fc53f"},
                    CanTopupPrivateMoneyIds = new string[]{"5762acd7-c73e-4d1a-9c27-282067d32bea", "501ddf14-abab-47c6-87ab-8d3a0af4a913"},
                    Status = "active",
                };
                Response.ShopWithAccounts response = await request.Send(client);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.Data["StatusCode"], (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.Data["StatusCode"] >= 300, "Should be larger than 300");
            }
        }

        [Test]
        public async Task UpdateShop9()
        {
            try {
                Request.UpdateShop request = new Request.UpdateShop(
                    "5358a83d-ea9c-4005-9ea5-e6eafc313bde"
                ) {
                    Name = "Kegb2omvzaKg5gDjWgJl5Jcg96KO6V5l3jeN7X6FM",
                    PostalCode = "246-1410",
                    Address = "Gzn46QIr5zgK1iRnAb3HCbrg",
                    Tel = "0622-6988-196",
                    Email = "PhbEmOaxkw@7UkT.com",
                    ExternalId = "Ie9w0hVx2BC4ZujWdh7mkvHVPlaNGEyC9Mw",
                    PrivateMoneyIds = new string[]{"e50c857d-d142-4553-8c4f-53bf9e247fb2", "443c6943-21ff-4758-a4f7-97b844d8a02a", "4107f93d-2c16-48f5-8d39-9a4efac51b15"},
                    CanTopupPrivateMoneyIds = new string[]{"57a1f330-8f81-4e96-a3e3-e2a83d5373d6", "ffbfe69d-381b-48bb-81d7-aad8fa019131", "4f038602-4750-4cd3-b1a1-ba61134e24e8", "d91205a0-27a5-42da-a432-8c814afde423", "96a95e13-eb1b-4b90-b6e0-d569e31d26a1", "26907e7a-6d83-4556-9cdb-110aa51c8afe", "e47e08c7-4b3c-4890-bd06-3ac8719a898a", "0dc70272-39f4-475a-b1b5-aa18b8421a46", "bebc7f7d-a24b-43f4-b378-4d6a9d93a300"},
                    Status = "active",
                };
                Response.ShopWithAccounts response = await request.Send(client);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.Data["StatusCode"], (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.Data["StatusCode"] >= 300, "Should be larger than 300");
            }
        }

    }
}
