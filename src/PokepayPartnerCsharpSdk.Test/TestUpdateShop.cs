// DO NOT EDIT: File is generated by code generator.
#nullable enable
using System;
using System.Net;
using System.Net.Http;
using NUnit.Framework;
using System.Threading.Tasks;

using PokepayPartnerCsharpSdk;

namespace PokepayPartnerCsharpSdk.Test
{
    public class TestUpdateShop
    {
        private Client? client;

        [OneTimeSetUp]
        public void OneTimeSetup()
        {
            client = new Client("~/.pokepay/test-config.ini");
        }

        [Test]
        public async Task UpdateShop0()
        {
            try {
                Request.UpdateShop request = new Request.UpdateShop(
                    "031a3d03-2402-433f-84ec-df97a37fd9e1"
                );
                Response.ShopWithAccounts response = await request.Send(client!);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.StatusCode!, (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.StatusCode >= 300, "Should be larger than 300");
            }
        }

        [Test]
        public async Task UpdateShop1()
        {
            try {
                Request.UpdateShop request = new Request.UpdateShop(
                    "031a3d03-2402-433f-84ec-df97a37fd9e1"
                ) {
                    CanTopupPrivateMoneyIds = new string[]{"d4734111-1374-4fa4-a96a-194eab3f7421", "58aa49b3-3076-4993-a562-6bea13b6eca2", "b4fb6454-66b8-461f-a21a-2336b41bb011", "9fb0ea39-5f52-456a-bf59-5fd24025c450", "0ff143c3-5871-471d-9b76-346ed5e8f2be", "a7c3edda-6731-48d9-877a-2264d089fa21", "5198101f-4a13-46f2-a89b-9e5f98b71047", "9f37701e-cfa9-4e48-b70f-38a9956bb258", "97aba8cb-7703-477e-8e17-176fd8d3a52e", "76c77fc7-9e7e-4c44-ac7c-5f7b58f7ca70"}
                };
                Response.ShopWithAccounts response = await request.Send(client!);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.StatusCode!, (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.StatusCode >= 300, "Should be larger than 300");
            }
        }

        [Test]
        public async Task UpdateShop2()
        {
            try {
                Request.UpdateShop request = new Request.UpdateShop(
                    "031a3d03-2402-433f-84ec-df97a37fd9e1"
                ) {
                    PrivateMoneyIds = new string[]{"f84f3771-6518-43ea-99ba-7b55df077ce1"},
                    CanTopupPrivateMoneyIds = new string[]{"202928b2-ccce-4592-a03b-05ceaf8e9598", "bb026337-2f1f-4bea-a03f-271088ee38d7", "b41b802b-2894-4617-a2d4-438c32bd755b", "b68c13c1-60aa-41db-b8f3-6385c172cc28"}
                };
                Response.ShopWithAccounts response = await request.Send(client!);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.StatusCode!, (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.StatusCode >= 300, "Should be larger than 300");
            }
        }

        [Test]
        public async Task UpdateShop3()
        {
            try {
                Request.UpdateShop request = new Request.UpdateShop(
                    "031a3d03-2402-433f-84ec-df97a37fd9e1"
                ) {
                    ExternalId = "T9CjYdhYyR9ZtW",
                    PrivateMoneyIds = new string[]{"5f12dd14-be3d-43bc-8d41-cdcb900eb4a8", "eba9e053-175a-4c48-91a2-0911f6b07015", "90428f32-08df-4508-9454-726a51d12161", "c761d8ad-f7e8-440b-a32a-99b0ed650e68", "a6306f41-eb53-4c41-8063-70840d846145", "e006ed69-749e-409d-a214-3b7d96243dad", "3ecc919d-6be0-47ea-855f-98bca7ff706b", "8cc70b75-0f9e-473b-b198-94e6542d1ae4"},
                    CanTopupPrivateMoneyIds = new string[]{"25fe47e5-ba99-4f74-a20b-28879b3ea51d"}
                };
                Response.ShopWithAccounts response = await request.Send(client!);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.StatusCode!, (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.StatusCode >= 300, "Should be larger than 300");
            }
        }

        [Test]
        public async Task UpdateShop4()
        {
            try {
                Request.UpdateShop request = new Request.UpdateShop(
                    "031a3d03-2402-433f-84ec-df97a37fd9e1"
                ) {
                    Email = "gL0O7DlAFr@kXVi.com",
                    ExternalId = "hIdQWu7J4NYirXryPP6taqbm6hsnA9",
                    PrivateMoneyIds = new string[]{"6359daa7-32c5-434c-9d02-746b3d9dc3e1", "ac377f10-22a7-461d-a30c-d03b67720d17", "291144d6-999f-4342-a0be-c1ab94a8ff88", "9d0d587d-c9e0-4634-803b-c5e4c6bdfffa", "7b17f392-79c4-4071-acd1-800f6987d531", "57c5ff4c-51a5-4902-a254-5988b7eb2e79", "e0991056-3b14-4b90-89e7-2d09b188aed6", "b0c5e350-d337-4113-a649-4a7ac1b1ce2a"},
                    CanTopupPrivateMoneyIds = new string[]{"03828b78-d95f-4665-adee-eb72e3717e44"}
                };
                Response.ShopWithAccounts response = await request.Send(client!);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.StatusCode!, (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.StatusCode >= 300, "Should be larger than 300");
            }
        }

        [Test]
        public async Task UpdateShop5()
        {
            try {
                Request.UpdateShop request = new Request.UpdateShop(
                    "031a3d03-2402-433f-84ec-df97a37fd9e1"
                ) {
                    Tel = "0589-393816",
                    Email = "7HPwLX5lwW@ZKuW.com",
                    ExternalId = "f4n5wNPq2rjN28QfQLnQ9Qr2",
                    PrivateMoneyIds = new string[]{"a2cc6573-b7b4-4e5f-b2c1-91823ba84b3c", "af043029-2cf9-4a29-85d6-fe92f2af9e12", "3ce66922-5af4-460b-b2f7-522f9c7d26f3", "5635a137-1581-4ba6-97eb-695ba2fdfe8d", "4c790029-7d4a-437a-99a5-eff0d7efcfe7", "2deb9b47-edd5-4b58-b4ed-b713e147b274", "4542fe12-89a0-459f-b86f-3ee04c67b8e2"},
                    CanTopupPrivateMoneyIds = new string[]{"fa64a739-c725-4bda-833f-fdf0c0c4ac4e", "1d8581ca-3a47-4c5a-9ca4-eb8cd6665b09", "29db2901-705b-4a97-af0b-b0226871ecc0", "e2323947-6e10-4aab-a236-744ccf8b639e", "484b6dfa-6054-4457-83be-8e49681b8a5d", "52cb2ee2-6293-4c64-b817-bb5a47dc634e", "8cde91a6-c288-427b-962e-64aa42c0e891", "2ee0a172-8a61-41db-a6ad-f9e407fa762d", "e0ad74e9-1a89-4769-b63d-dc4e727c8fee", "ec2b83b4-e0ce-4705-a2ce-8acc53c8461a"}
                };
                Response.ShopWithAccounts response = await request.Send(client!);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.StatusCode!, (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.StatusCode >= 300, "Should be larger than 300");
            }
        }

        [Test]
        public async Task UpdateShop6()
        {
            try {
                Request.UpdateShop request = new Request.UpdateShop(
                    "031a3d03-2402-433f-84ec-df97a37fd9e1"
                ) {
                    Address = "XIdoiqtrelImUNmLeKEfXUc2dQExu22E4bXnTsrAuXzcUztcjpDcIzv8TjKb1dIcQKtgPEpt9Ynsu0LI4T70lQwB453YpOK96",
                    Tel = "066-04450",
                    Email = "RlFM4Xw2Yn@eFRt.com",
                    ExternalId = "au24yc1kusN7qW2yhhP",
                    PrivateMoneyIds = new string[]{"f26e6e8b-1a85-4e62-847e-f8bfd4a7b448", "f1e5fa9f-2dce-4ad0-a852-503f3dd9ea16", "b77353be-9319-4efd-8311-8ee75cd46c6e", "d203ee85-a1f1-49d9-ae15-b055d4ee5687", "0017e719-bd6c-44e8-be89-c7b4e55bd5ca", "93be7be0-f162-4f3f-8bcf-c4f2b82cd4cd"},
                    CanTopupPrivateMoneyIds = new string[]{"e6ea17ab-d7bd-4735-aac6-bdf7d254c172", "fd813804-6589-4241-a48f-440befecf122", "25e5e90f-a8e3-4fc0-bab5-c3377050ce26", "f1feaeda-dfac-4d4f-9729-8073cc800afc", "fc596d2c-b4c4-4772-b0ad-33c4d4e508ad", "73a59e99-c5a2-4fea-b403-14399d81094d", "615d1616-b6b1-4211-bfb2-ff109526df00", "9cee2842-58dc-40cf-aeef-f431a39e4a41", "ca96a187-a997-4ee3-ad98-e6ea0efd3522", "cfbdb7bb-7585-4c4d-b9b6-493be1d4c1ef"}
                };
                Response.ShopWithAccounts response = await request.Send(client!);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.StatusCode!, (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.StatusCode >= 300, "Should be larger than 300");
            }
        }

        [Test]
        public async Task UpdateShop7()
        {
            try {
                Request.UpdateShop request = new Request.UpdateShop(
                    "031a3d03-2402-433f-84ec-df97a37fd9e1"
                ) {
                    PostalCode = "964-8378",
                    Address = "hiSDgXKvVy5paxKD2XcOfy",
                    Tel = "022-9011890",
                    Email = "j1t4n3lpno@ezOx.com",
                    ExternalId = "Ov6eGwjQCqxdtQnDY4S9N4HhJ5",
                    PrivateMoneyIds = new string[]{"d8b4ff27-2690-4819-8719-1ac3b00606f3", "dbbd63a7-8158-4a27-92db-a388942a5090"},
                    CanTopupPrivateMoneyIds = new string[]{"e781493c-9f14-449b-a355-5981bd1c9d28", "e4be215a-5359-4eb4-92a1-1ddc21780b37", "275f6e63-f2a8-4b3f-90f0-d8c92ac3be91", "c5390fdf-25ac-4a91-a85e-a2301cec3dba", "5fb2a2b3-cc9b-433a-82f6-d1f17c529d42", "727204b7-7d43-467a-8c8c-a06a96580059", "aa5e1648-debc-453c-af4f-c13287b2989e"}
                };
                Response.ShopWithAccounts response = await request.Send(client!);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.StatusCode!, (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.StatusCode >= 300, "Should be larger than 300");
            }
        }

        [Test]
        public async Task UpdateShop8()
        {
            try {
                Request.UpdateShop request = new Request.UpdateShop(
                    "031a3d03-2402-433f-84ec-df97a37fd9e1"
                ) {
                    Name = "zEE65UlKtMCe12MUV2dxrA2428zEWnFZLX87qtedPzV8NdiYCurcmVOPZ",
                    PostalCode = "067-7871",
                    Address = "0VESfspW9b9NBdczTSynCfTiWLEN2pEbq7ZeB8PVJkE9NzaeTptZ5kX9rLpagdWQnEnTlLyubwibc5uG9Y4cn6ApRZ5NX6gFb5nuODlmm9rpn022H3wQmNFzbLFmfFSz1uperYHhU5vbLxW8Yq15XpRuu89q3NykiRPYO2oQiAYMcKkXBWEu4RSjxgCW3",
                    Tel = "007127-6924",
                    Email = "gqdqFleVhp@Cebd.com",
                    ExternalId = "mmx3jJLFYo72YjP5pod5QaLCZTmFLxum",
                    PrivateMoneyIds = new string[]{"0651b704-7d8d-4bee-9876-583fe7c1a372", "8f2b8375-34f0-48f8-a1b1-487b1ac76d36", "36af6aab-c9ba-41a2-92c5-d658e4d0232b", "0d4fa2c3-5594-4f55-98f9-b887a1a6f750", "1f1ee5bb-97e6-490b-833c-32fd4d739261", "3b82b6e2-c914-4d85-aac5-a17474585c4d", "4bc813ec-c8e9-4c3f-8966-550eeef0e8be", "433a4037-0d77-464b-843d-25efd80d9450", "6d8b81dc-d385-44bc-a4ab-b29f65a607dc", "2654b3ed-a92c-46a7-974e-230f44b30c3d"},
                    CanTopupPrivateMoneyIds = new string[]{"0b10fe57-f30b-4bd5-8eb6-5efa8e72ca15"}
                };
                Response.ShopWithAccounts response = await request.Send(client!);
                Assert.NotNull(response, "Shouldn't be null at least");
            } catch (HttpRequestException e) {
                Assert.AreNotEqual((int) e.StatusCode!, (int) HttpStatusCode.BadRequest, "Shouldn't be BadRequest");
                Assert.True((int) e.StatusCode >= 300, "Should be larger than 300");
            }
        }

    }
}
