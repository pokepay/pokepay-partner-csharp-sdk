// DO NOT EDIT: File is generated by code generator.
using System.Net.Http;
using System.Text.Json;
using System.Threading.Tasks;

using PokepayPartnerCsharpSdk;
using PokepayPartnerCsharpSdk.Response;

namespace PokepayPartnerCsharpSdk.Request
{
    public class UpdateCampaign
    {
        private string CampaignId { get; set; }
#if NETFRAMEWORK
        public string Name { get; set; }
        public string StartsAt { get; set; }
        public string EndsAt { get; set; }
        public System.Nullable<int> Priority { get; set; }
        public string Event { get; set; }
        public string Description { get; set; }
        public string Status { get; set; }
        public string PointExpiresAt { get; set; }
        public System.Nullable<int> PointExpiresInDays { get; set; }
        public System.Nullable<bool> IsExclusive { get; set; }
        public string Subject { get; set; }
        public object[] AmountBasedPointRules { get; set; }
        public object[] ProductBasedPointRules { get; set; }
        public object[] BlacklistedProductRules { get; set; }
        public int[] ApplicableDaysOfWeek { get; set; }
        public object[] ApplicableTimeRanges { get; set; }
        public string[] ApplicableShopIds { get; set; }
        public string[] BlacklistedShopIds { get; set; }
        public System.Nullable<int> MinimumNumberOfProducts { get; set; }
        public System.Nullable<int> MinimumNumberOfAmount { get; set; }
        public System.Nullable<int> MinimumNumberForCombinationPurchase { get; set; }
        public System.Nullable<bool> ExistInEachProductGroups { get; set; }
        public System.Nullable<int> MaxPointAmount { get; set; }
        public System.Nullable<int> MaxTotalPointAmount { get; set; }
        public object ApplicableAccountMetadata { get; set; }
        public object ApplicableTransactionMetadata { get; set; }
        public System.Nullable<int> BudgetCapsAmount { get; set; }
#else
        #nullable enable
        public string? Name { get; set; }
        #nullable enable
        public string? StartsAt { get; set; }
        #nullable enable
        public string? EndsAt { get; set; }
        #nullable enable
        public int? Priority { get; set; }
        #nullable enable
        public string? Event { get; set; }
        #nullable enable
        public string? Description { get; set; }
        #nullable enable
        public string? Status { get; set; }
        #nullable enable
        public string? PointExpiresAt { get; set; }
        #nullable enable
        public int? PointExpiresInDays { get; set; }
        #nullable enable
        public bool? IsExclusive { get; set; }
        #nullable enable
        public string? Subject { get; set; }
        #nullable enable
        public object[]? AmountBasedPointRules { get; set; }
        #nullable enable
        public object[]? ProductBasedPointRules { get; set; }
        #nullable enable
        public object[]? BlacklistedProductRules { get; set; }
        #nullable enable
        public int[]? ApplicableDaysOfWeek { get; set; }
        #nullable enable
        public object[]? ApplicableTimeRanges { get; set; }
        #nullable enable
        public string[]? ApplicableShopIds { get; set; }
        #nullable enable
        public string[]? BlacklistedShopIds { get; set; }
        #nullable enable
        public int? MinimumNumberOfProducts { get; set; }
        #nullable enable
        public int? MinimumNumberOfAmount { get; set; }
        #nullable enable
        public int? MinimumNumberForCombinationPurchase { get; set; }
        #nullable enable
        public bool? ExistInEachProductGroups { get; set; }
        #nullable enable
        public int? MaxPointAmount { get; set; }
        #nullable enable
        public int? MaxTotalPointAmount { get; set; }
        #nullable enable
        public object? ApplicableAccountMetadata { get; set; }
        #nullable enable
        public object? ApplicableTransactionMetadata { get; set; }
        #nullable enable
        public int? BudgetCapsAmount { get; set; }
#endif

        public UpdateCampaign(string campaignId) =>
            (CampaignId) = (campaignId);

        private string path { get { return "/campaigns" + "/" + CampaignId; } }

        private static readonly HttpMethod method = new HttpMethod("PATCH");

#if NETFRAMEWORK
        public async Task<Campaign> Send(Client client) {
                string res = await client.Send(path, UpdateCampaign.method, this);
                return JsonSerializer.Deserialize<Campaign>(res, client.JsonOptions);
        }
#else
#nullable enable
        public async Task<Campaign?> Send(Client client) {
                string res = await client.Send(path, UpdateCampaign.method, this);
                return JsonSerializer.Deserialize<Campaign>(res, client.JsonOptions);
        }
#endif
    }
}
