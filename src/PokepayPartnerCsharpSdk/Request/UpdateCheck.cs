// DO NOT EDIT: File is generated by code generator.
using System.Net.Http;
using System.Text.Json;
using System.Threading.Tasks;

using PokepayPartnerCsharpSdk;
using PokepayPartnerCsharpSdk.Response;

namespace PokepayPartnerCsharpSdk.Request
{
    public class UpdateCheck
    {
        private string CheckId { get; set; }
#if NETFRAMEWORK
        public double MoneyAmount { get; set; }
        public double PointAmount { get; set; }
        public string Description { get; set; }
        public bool IsOnetime { get; set; }
        public int UsageLimit { get; set; }
        public string ExpiresAt { get; set; }
        public string PointExpiresAt { get; set; }
        public int PointExpiresInDays { get; set; }
        public string BearPointAccount { get; set; }
        public bool IsDisabled { get; set; }
#else
        #nullable enable
        public double? MoneyAmount { get; set; }
        #nullable enable
        public double? PointAmount { get; set; }
        #nullable enable
        public string? Description { get; set; }
        #nullable enable
        public bool? IsOnetime { get; set; }
        #nullable enable
        public int? UsageLimit { get; set; }
        #nullable enable
        public string? ExpiresAt { get; set; }
        #nullable enable
        public string? PointExpiresAt { get; set; }
        #nullable enable
        public int? PointExpiresInDays { get; set; }
        #nullable enable
        public string? BearPointAccount { get; set; }
        #nullable enable
        public bool? IsDisabled { get; set; }
#endif

        public UpdateCheck(string checkId) =>
            (CheckId) = (checkId);

        private string path { get { return "/checks" + "/" + CheckId; } }

        private static readonly HttpMethod method = new HttpMethod("PATCH");

#if NETFRAMEWORK
        public async Task<Check> Send(Client client) {
                string res = await client.Send(path, UpdateCheck.method, this);
                return JsonSerializer.Deserialize<Check>(res, client.JsonOptions);
        }
#else
#nullable enable
        public async Task<Check?> Send(Client client) {
                string res = await client.Send(path, UpdateCheck.method, this);
                return JsonSerializer.Deserialize<Check>(res, client.JsonOptions);
        }
#endif
    }
}
