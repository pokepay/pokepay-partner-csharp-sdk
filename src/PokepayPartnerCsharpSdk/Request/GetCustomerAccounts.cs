// DO NOT EDIT: File is generated by code generator.
using System.Net.Http;
using System.Text.Json;
using System.Threading.Tasks;

using PokepayPartnerCsharpSdk;
using PokepayPartnerCsharpSdk.Response;

namespace PokepayPartnerCsharpSdk.Request
{
    public class GetCustomerAccounts
    {
#if NETFRAMEWORK
        public string PrivateMoneyId { get; set; }
        public int Page { get; set; }
        public int PerPage { get; set; }
        public string CreatedAtFrom { get; set; }
        public string CreatedAtTo { get; set; }
        public bool IsSuspended { get; set; }
        public string Status { get; set; }
        public string ExternalId { get; set; }
        public string Tel { get; set; }
        public string Email { get; set; }
#else
        public string PrivateMoneyId { get; set; }
        #nullable enable
        public int? Page { get; set; }
        #nullable enable
        public int? PerPage { get; set; }
        #nullable enable
        public string? CreatedAtFrom { get; set; }
        #nullable enable
        public string? CreatedAtTo { get; set; }
        #nullable enable
        public bool? IsSuspended { get; set; }
        #nullable enable
        public string? Status { get; set; }
        #nullable enable
        public string? ExternalId { get; set; }
        #nullable enable
        public string? Tel { get; set; }
        #nullable enable
        public string? Email { get; set; }
#endif

        public GetCustomerAccounts(string privateMoneyId) =>
            (PrivateMoneyId) = (privateMoneyId);

        private string path { get { return "/accounts" + "/customers"; } }

        private static readonly HttpMethod method = new HttpMethod("GET");

#if NETFRAMEWORK
        public async Task<PaginatedAccountWithUsers> Send(Client client) {
                string res = await client.Send(path, GetCustomerAccounts.method, this);
                return JsonSerializer.Deserialize<PaginatedAccountWithUsers>(res, client.JsonOptions);
        }
#else
#nullable enable
        public async Task<PaginatedAccountWithUsers?> Send(Client client) {
                string res = await client.Send(path, GetCustomerAccounts.method, this);
                return JsonSerializer.Deserialize<PaginatedAccountWithUsers>(res, client.JsonOptions);
        }
#endif
    }
}
